{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# **Algerian Dataset with a twist**\n",
    " It is supposed to be a `classification`  problem, but whatif you had to predict the Temperature. and all you were provided with was the **Algerian Dataset** ?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Linear Regression on Algerian Dataset for predicting `Temperature`"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Steps we are going to follow:\n",
    "- Load dataset\n",
    "- Basic pre-processing\n",
    "  - Datatype conformation\n",
    "  - Missing value filling\n",
    "  - Data correction\n",
    "- EDA\n",
    "  - Univariate and Bi-variate feature assessment\n",
    "    - Correlation Handling\n",
    "  - Linear regression assumption conformation\n",
    "- Machine Learning Model\n",
    "  - Linear model\n",
    "  - Ridge and Lasso test\n",
    "  - performance test\n",
    "- repeat to Feature Engineering If required"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1: WE LOAD RELEVANT LIBRARIES\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# LOADING THE DATASET"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Bejaia Region Dataset</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <td>Classes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01</th>\n",
       "      <th>06</th>\n",
       "      <th>2012</th>\n",
       "      <th>29</th>\n",
       "      <th>57</th>\n",
       "      <th>18</th>\n",
       "      <th>0</th>\n",
       "      <th>65.7</th>\n",
       "      <th>3.4</th>\n",
       "      <th>7.6</th>\n",
       "      <th>1.3</th>\n",
       "      <th>3.4</th>\n",
       "      <th>0.5</th>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>02</th>\n",
       "      <th>06</th>\n",
       "      <th>2012</th>\n",
       "      <th>29</th>\n",
       "      <th>61</th>\n",
       "      <th>13</th>\n",
       "      <th>1.3</th>\n",
       "      <th>64.4</th>\n",
       "      <th>4.1</th>\n",
       "      <th>7.6</th>\n",
       "      <th>1</th>\n",
       "      <th>3.9</th>\n",
       "      <th>0.4</th>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>03</th>\n",
       "      <th>06</th>\n",
       "      <th>2012</th>\n",
       "      <th>26</th>\n",
       "      <th>82</th>\n",
       "      <th>22</th>\n",
       "      <th>13.1</th>\n",
       "      <th>47.1</th>\n",
       "      <th>2.5</th>\n",
       "      <th>7.1</th>\n",
       "      <th>0.3</th>\n",
       "      <th>2.7</th>\n",
       "      <th>0.1</th>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>04</th>\n",
       "      <th>06</th>\n",
       "      <th>2012</th>\n",
       "      <th>25</th>\n",
       "      <th>89</th>\n",
       "      <th>13</th>\n",
       "      <th>2.5</th>\n",
       "      <th>28.6</th>\n",
       "      <th>1.3</th>\n",
       "      <th>6.9</th>\n",
       "      <th>0</th>\n",
       "      <th>1.7</th>\n",
       "      <th>0</th>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                  Bejaia Region Dataset \n",
       "day month year Temperature  RH  Ws Rain  FFMC DMC DC  ISI BUI FWI              Classes  \n",
       "01  06    2012 29          57  18  0     65.7 3.4 7.6 1.3 3.4 0.5            not fire   \n",
       "02  06    2012 29          61  13  1.3   64.4 4.1 7.6 1   3.9 0.4            not fire   \n",
       "03  06    2012 26          82  22  13.1  47.1 2.5 7.1 0.3 2.7 0.1            not fire   \n",
       "04  06    2012 25          89  13  2.5   28.6 1.3 6.9 0   1.7 0              not fire   "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw=pd.read_csv('./algerianForest.csv')\n",
    "raw.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As you can see the dataset is having misplaced columns.\n",
    "\n",
    "The actual values for the column name are in the row index 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>level_0</th>\n",
       "      <th>level_1</th>\n",
       "      <th>level_2</th>\n",
       "      <th>level_3</th>\n",
       "      <th>level_4</th>\n",
       "      <th>level_5</th>\n",
       "      <th>level_6</th>\n",
       "      <th>level_7</th>\n",
       "      <th>level_8</th>\n",
       "      <th>level_9</th>\n",
       "      <th>level_10</th>\n",
       "      <th>level_11</th>\n",
       "      <th>level_12</th>\n",
       "      <th>Bejaia Region Dataset</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>day</td>\n",
       "      <td>month</td>\n",
       "      <td>year</td>\n",
       "      <td>Temperature</td>\n",
       "      <td>RH</td>\n",
       "      <td>Ws</td>\n",
       "      <td>Rain</td>\n",
       "      <td>FFMC</td>\n",
       "      <td>DMC</td>\n",
       "      <td>DC</td>\n",
       "      <td>ISI</td>\n",
       "      <td>BUI</td>\n",
       "      <td>FWI</td>\n",
       "      <td>Classes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>01</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>57</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>65.7</td>\n",
       "      <td>3.4</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>02</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>61</td>\n",
       "      <td>13</td>\n",
       "      <td>1.3</td>\n",
       "      <td>64.4</td>\n",
       "      <td>4.1</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>03</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>26</td>\n",
       "      <td>82</td>\n",
       "      <td>22</td>\n",
       "      <td>13.1</td>\n",
       "      <td>47.1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.7</td>\n",
       "      <td>0.1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>04</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>25</td>\n",
       "      <td>89</td>\n",
       "      <td>13</td>\n",
       "      <td>2.5</td>\n",
       "      <td>28.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>26</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>65</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>85.4</td>\n",
       "      <td>16</td>\n",
       "      <td>44.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>16.9</td>\n",
       "      <td>6.5</td>\n",
       "      <td>fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>27</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>28</td>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>4.4</td>\n",
       "      <td>41.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>8</td>\n",
       "      <td>0.1</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>28</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>87</td>\n",
       "      <td>29</td>\n",
       "      <td>0.5</td>\n",
       "      <td>45.9</td>\n",
       "      <td>3.5</td>\n",
       "      <td>7.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>29</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>54</td>\n",
       "      <td>18</td>\n",
       "      <td>0.1</td>\n",
       "      <td>79.7</td>\n",
       "      <td>4.3</td>\n",
       "      <td>15.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>5.1</td>\n",
       "      <td>0.7</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>30</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>64</td>\n",
       "      <td>15</td>\n",
       "      <td>0.2</td>\n",
       "      <td>67.3</td>\n",
       "      <td>3.8</td>\n",
       "      <td>16.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>4.8</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>247 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    level_0 level_1 level_2      level_3 level_4 level_5 level_6 level_7  \\\n",
       "0       day   month    year  Temperature      RH      Ws   Rain     FFMC   \n",
       "1        01      06    2012           29      57      18       0    65.7   \n",
       "2        02      06    2012           29      61      13     1.3    64.4   \n",
       "3        03      06    2012           26      82      22    13.1    47.1   \n",
       "4        04      06    2012           25      89      13     2.5    28.6   \n",
       "..      ...     ...     ...          ...     ...     ...     ...     ...   \n",
       "242      26      09    2012           30      65      14       0    85.4   \n",
       "243      27      09    2012           28      87      15     4.4    41.1   \n",
       "244      28      09    2012           27      87      29     0.5    45.9   \n",
       "245      29      09    2012           24      54      18     0.1    79.7   \n",
       "246      30      09    2012           24      64      15     0.2    67.3   \n",
       "\n",
       "    level_8 level_9 level_10 level_11 level_12 Bejaia Region Dataset   \n",
       "0       DMC      DC      ISI      BUI      FWI              Classes    \n",
       "1       3.4     7.6      1.3      3.4      0.5            not fire     \n",
       "2       4.1     7.6        1      3.9      0.4            not fire     \n",
       "3       2.5     7.1      0.3      2.7      0.1            not fire     \n",
       "4       1.3     6.9        0      1.7        0            not fire     \n",
       "..      ...     ...      ...      ...      ...                    ...  \n",
       "242      16    44.5      4.5     16.9      6.5                fire     \n",
       "243     6.5       8      0.1      6.2        0            not fire     \n",
       "244     3.5     7.9      0.4      3.4      0.2            not fire     \n",
       "245     4.3    15.2      1.7      5.1      0.7            not fire     \n",
       "246     3.8    16.5      1.2      4.8      0.5           not fire      \n",
       "\n",
       "[247 rows x 14 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Handling misplaced rows\n",
    "\n",
    "# resetting the index first\n",
    "\n",
    "\n",
    "raw.reset_index(inplace=True)\n",
    "raw\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>01</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>57</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>65.7</td>\n",
       "      <td>3.4</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>02</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>61</td>\n",
       "      <td>13</td>\n",
       "      <td>1.3</td>\n",
       "      <td>64.4</td>\n",
       "      <td>4.1</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>03</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>26</td>\n",
       "      <td>82</td>\n",
       "      <td>22</td>\n",
       "      <td>13.1</td>\n",
       "      <td>47.1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.7</td>\n",
       "      <td>0.1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>04</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>25</td>\n",
       "      <td>89</td>\n",
       "      <td>13</td>\n",
       "      <td>2.5</td>\n",
       "      <td>28.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>05</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>77</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>64.8</td>\n",
       "      <td>3</td>\n",
       "      <td>14.2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>26</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>65</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>85.4</td>\n",
       "      <td>16</td>\n",
       "      <td>44.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>16.9</td>\n",
       "      <td>6.5</td>\n",
       "      <td>fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>27</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>28</td>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>4.4</td>\n",
       "      <td>41.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>8</td>\n",
       "      <td>0.1</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>28</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>87</td>\n",
       "      <td>29</td>\n",
       "      <td>0.5</td>\n",
       "      <td>45.9</td>\n",
       "      <td>3.5</td>\n",
       "      <td>7.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>29</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>54</td>\n",
       "      <td>18</td>\n",
       "      <td>0.1</td>\n",
       "      <td>79.7</td>\n",
       "      <td>4.3</td>\n",
       "      <td>15.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>5.1</td>\n",
       "      <td>0.7</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>30</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>64</td>\n",
       "      <td>15</td>\n",
       "      <td>0.2</td>\n",
       "      <td>67.3</td>\n",
       "      <td>3.8</td>\n",
       "      <td>16.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>4.8</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>246 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "0   day month  year Temperature  RH  Ws Rain   FFMC  DMC    DC  ISI   BUI  \\\n",
       "1    01    06  2012          29  57  18     0  65.7  3.4   7.6  1.3   3.4   \n",
       "2    02    06  2012          29  61  13   1.3  64.4  4.1   7.6    1   3.9   \n",
       "3    03    06  2012          26  82  22  13.1  47.1  2.5   7.1  0.3   2.7   \n",
       "4    04    06  2012          25  89  13   2.5  28.6  1.3   6.9    0   1.7   \n",
       "5    05    06  2012          27  77  16     0  64.8    3  14.2  1.2   3.9   \n",
       "..   ..   ...   ...         ...  ..  ..   ...   ...  ...   ...  ...   ...   \n",
       "242  26    09  2012          30  65  14     0  85.4   16  44.5  4.5  16.9   \n",
       "243  27    09  2012          28  87  15   4.4  41.1  6.5     8  0.1   6.2   \n",
       "244  28    09  2012          27  87  29   0.5  45.9  3.5   7.9  0.4   3.4   \n",
       "245  29    09  2012          24  54  18   0.1  79.7  4.3  15.2  1.7   5.1   \n",
       "246  30    09  2012          24  64  15   0.2  67.3  3.8  16.5  1.2   4.8   \n",
       "\n",
       "0    FWI     Classes    \n",
       "1    0.5   not fire     \n",
       "2    0.4   not fire     \n",
       "3    0.1   not fire     \n",
       "4      0   not fire     \n",
       "5    0.5   not fire     \n",
       "..   ...           ...  \n",
       "242  6.5       fire     \n",
       "243    0   not fire     \n",
       "244  0.2   not fire     \n",
       "245  0.7   not fire     \n",
       "246  0.5  not fire      \n",
       "\n",
       "[246 rows x 14 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# adding the 1st row value of `raw` dataframe as columns name\n",
    "raw.columns = raw.iloc[0]\n",
    "raw=raw.drop(0)\n",
    "raw"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# It looks better now"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['day', 'month', 'year', 'Temperature', ' RH', ' Ws', 'Rain ', 'FFMC',\n",
       "       'DMC', 'DC', 'ISI', 'BUI', 'FWI', 'Classes  '],\n",
       "      dtype='object', name=0)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw.columns\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# We see there are unnecessary balnk spaces sorrounding the names of the columns. Lets remove them"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['day', 'month', 'year', 'Temperature', 'RH', 'Ws', 'Rain', 'FFMC',\n",
       "       'DMC', 'DC', 'ISI', 'BUI', 'FWI', 'Classes'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw.columns=[col.strip() for col in raw.columns]\n",
    "raw.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Now lets handle missing datas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "day            0\n",
       "month          1\n",
       "year           1\n",
       "Temperature    1\n",
       "RH             1\n",
       "Ws             1\n",
       "Rain           1\n",
       "FFMC           1\n",
       "DMC            1\n",
       "DC             1\n",
       "ISI            1\n",
       "BUI            1\n",
       "FWI            1\n",
       "Classes        2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [day, month, year, Temperature, RH, Ws, Rain, FFMC, DMC, DC, ISI, BUI, FWI, Classes]\n",
       "Index: []"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Sidi-Bel Abbes Region Dataset</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               day month year Temperature   RH   Ws Rain FFMC  \\\n",
       "123  Sidi-Bel Abbes Region Dataset   NaN  NaN         NaN  NaN  NaN  NaN  NaN   \n",
       "\n",
       "     DMC   DC  ISI  BUI  FWI Classes  \n",
       "123  NaN  NaN  NaN  NaN  NaN     NaN  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Sidi-Bel Abbes Region Dataset</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               day month year Temperature   RH   Ws Rain FFMC  \\\n",
       "123  Sidi-Bel Abbes Region Dataset   NaN  NaN         NaN  NaN  NaN  NaN  NaN   \n",
       "\n",
       "     DMC   DC  ISI  BUI  FWI Classes  \n",
       "123  NaN  NaN  NaN  NaN  NaN     NaN  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Sidi-Bel Abbes Region Dataset</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               day month year Temperature   RH   Ws Rain FFMC  \\\n",
       "123  Sidi-Bel Abbes Region Dataset   NaN  NaN         NaN  NaN  NaN  NaN  NaN   \n",
       "\n",
       "     DMC   DC  ISI  BUI  FWI Classes  \n",
       "123  NaN  NaN  NaN  NaN  NaN     NaN  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Sidi-Bel Abbes Region Dataset</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               day month year Temperature   RH   Ws Rain FFMC  \\\n",
       "123  Sidi-Bel Abbes Region Dataset   NaN  NaN         NaN  NaN  NaN  NaN  NaN   \n",
       "\n",
       "     DMC   DC  ISI  BUI  FWI Classes  \n",
       "123  NaN  NaN  NaN  NaN  NaN     NaN  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Sidi-Bel Abbes Region Dataset</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               day month year Temperature   RH   Ws Rain FFMC  \\\n",
       "123  Sidi-Bel Abbes Region Dataset   NaN  NaN         NaN  NaN  NaN  NaN  NaN   \n",
       "\n",
       "     DMC   DC  ISI  BUI  FWI Classes  \n",
       "123  NaN  NaN  NaN  NaN  NaN     NaN  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Sidi-Bel Abbes Region Dataset</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               day month year Temperature   RH   Ws Rain FFMC  \\\n",
       "123  Sidi-Bel Abbes Region Dataset   NaN  NaN         NaN  NaN  NaN  NaN  NaN   \n",
       "\n",
       "     DMC   DC  ISI  BUI  FWI Classes  \n",
       "123  NaN  NaN  NaN  NaN  NaN     NaN  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Sidi-Bel Abbes Region Dataset</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               day month year Temperature   RH   Ws Rain FFMC  \\\n",
       "123  Sidi-Bel Abbes Region Dataset   NaN  NaN         NaN  NaN  NaN  NaN  NaN   \n",
       "\n",
       "     DMC   DC  ISI  BUI  FWI Classes  \n",
       "123  NaN  NaN  NaN  NaN  NaN     NaN  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Sidi-Bel Abbes Region Dataset</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               day month year Temperature   RH   Ws Rain FFMC  \\\n",
       "123  Sidi-Bel Abbes Region Dataset   NaN  NaN         NaN  NaN  NaN  NaN  NaN   \n",
       "\n",
       "     DMC   DC  ISI  BUI  FWI Classes  \n",
       "123  NaN  NaN  NaN  NaN  NaN     NaN  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Sidi-Bel Abbes Region Dataset</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               day month year Temperature   RH   Ws Rain FFMC  \\\n",
       "123  Sidi-Bel Abbes Region Dataset   NaN  NaN         NaN  NaN  NaN  NaN  NaN   \n",
       "\n",
       "     DMC   DC  ISI  BUI  FWI Classes  \n",
       "123  NaN  NaN  NaN  NaN  NaN     NaN  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Sidi-Bel Abbes Region Dataset</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               day month year Temperature   RH   Ws Rain FFMC  \\\n",
       "123  Sidi-Bel Abbes Region Dataset   NaN  NaN         NaN  NaN  NaN  NaN  NaN   \n",
       "\n",
       "     DMC   DC  ISI  BUI  FWI Classes  \n",
       "123  NaN  NaN  NaN  NaN  NaN     NaN  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Sidi-Bel Abbes Region Dataset</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               day month year Temperature   RH   Ws Rain FFMC  \\\n",
       "123  Sidi-Bel Abbes Region Dataset   NaN  NaN         NaN  NaN  NaN  NaN  NaN   \n",
       "\n",
       "     DMC   DC  ISI  BUI  FWI Classes  \n",
       "123  NaN  NaN  NaN  NaN  NaN     NaN  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Sidi-Bel Abbes Region Dataset</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               day month year Temperature   RH   Ws Rain FFMC  \\\n",
       "123  Sidi-Bel Abbes Region Dataset   NaN  NaN         NaN  NaN  NaN  NaN  NaN   \n",
       "\n",
       "     DMC   DC  ISI  BUI  FWI Classes  \n",
       "123  NaN  NaN  NaN  NaN  NaN     NaN  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Sidi-Bel Abbes Region Dataset</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>14</td>\n",
       "      <td>07</td>\n",
       "      <td>2012</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>18</td>\n",
       "      <td>0.2</td>\n",
       "      <td>88.9</td>\n",
       "      <td>12.9</td>\n",
       "      <td>14.6 9</td>\n",
       "      <td>12.5</td>\n",
       "      <td>10.4</td>\n",
       "      <td>fire</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               day month  year Temperature   RH   Ws Rain  \\\n",
       "123  Sidi-Bel Abbes Region Dataset   NaN   NaN         NaN  NaN  NaN  NaN   \n",
       "168                             14    07  2012          37   37   18  0.2   \n",
       "\n",
       "     FFMC   DMC      DC   ISI   BUI      FWI Classes  \n",
       "123   NaN   NaN     NaN   NaN   NaN      NaN     NaN  \n",
       "168  88.9  12.9  14.6 9  12.5  10.4  fire        NaN  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for col in raw.columns:\n",
    "    display(raw[raw[col].isna()])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets drop the row indexed 123 since all its values are NaN."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>30</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>25</td>\n",
       "      <td>78</td>\n",
       "      <td>14</td>\n",
       "      <td>1.4</td>\n",
       "      <td>45</td>\n",
       "      <td>1.9</td>\n",
       "      <td>7.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>2.4</td>\n",
       "      <td>0.1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Sidi-Bel Abbes Region Dataset</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>day</td>\n",
       "      <td>month</td>\n",
       "      <td>year</td>\n",
       "      <td>Temperature</td>\n",
       "      <td>RH</td>\n",
       "      <td>Ws</td>\n",
       "      <td>Rain</td>\n",
       "      <td>FFMC</td>\n",
       "      <td>DMC</td>\n",
       "      <td>DC</td>\n",
       "      <td>ISI</td>\n",
       "      <td>BUI</td>\n",
       "      <td>FWI</td>\n",
       "      <td>Classes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>01</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>32</td>\n",
       "      <td>71</td>\n",
       "      <td>12</td>\n",
       "      <td>0.7</td>\n",
       "      <td>57.1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.8</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>02</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>73</td>\n",
       "      <td>13</td>\n",
       "      <td>4</td>\n",
       "      <td>55.7</td>\n",
       "      <td>2.7</td>\n",
       "      <td>7.8</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.9</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>26</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>65</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>85.4</td>\n",
       "      <td>16</td>\n",
       "      <td>44.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>16.9</td>\n",
       "      <td>6.5</td>\n",
       "      <td>fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>27</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>28</td>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>4.4</td>\n",
       "      <td>41.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>8</td>\n",
       "      <td>0.1</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>28</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>87</td>\n",
       "      <td>29</td>\n",
       "      <td>0.5</td>\n",
       "      <td>45.9</td>\n",
       "      <td>3.5</td>\n",
       "      <td>7.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>29</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>54</td>\n",
       "      <td>18</td>\n",
       "      <td>0.1</td>\n",
       "      <td>79.7</td>\n",
       "      <td>4.3</td>\n",
       "      <td>15.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>5.1</td>\n",
       "      <td>0.7</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>30</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>64</td>\n",
       "      <td>15</td>\n",
       "      <td>0.2</td>\n",
       "      <td>67.3</td>\n",
       "      <td>3.8</td>\n",
       "      <td>16.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>4.8</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>125 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                               day  month  year  Temperature   RH   Ws   Rain  \\\n",
       "122                             30     09  2012           25   78   14    1.4   \n",
       "123  Sidi-Bel Abbes Region Dataset    NaN   NaN          NaN  NaN  NaN    NaN   \n",
       "124                            day  month  year  Temperature   RH   Ws  Rain    \n",
       "125                             01     06  2012           32   71   12    0.7   \n",
       "126                             02     06  2012           30   73   13      4   \n",
       "..                             ...    ...   ...          ...  ...  ...    ...   \n",
       "242                             26     09  2012           30   65   14      0   \n",
       "243                             27     09  2012           28   87   15    4.4   \n",
       "244                             28     09  2012           27   87   29    0.5   \n",
       "245                             29     09  2012           24   54   18    0.1   \n",
       "246                             30     09  2012           24   64   15    0.2   \n",
       "\n",
       "     FFMC  DMC    DC  ISI   BUI  FWI       Classes  \n",
       "122    45  1.9   7.5  0.2   2.4  0.1   not fire     \n",
       "123   NaN  NaN   NaN  NaN   NaN  NaN           NaN  \n",
       "124  FFMC  DMC    DC  ISI   BUI  FWI     Classes    \n",
       "125  57.1  2.5   8.2  0.6   2.8  0.2   not fire     \n",
       "126  55.7  2.7   7.8  0.6   2.9  0.2   not fire     \n",
       "..    ...  ...   ...  ...   ...  ...           ...  \n",
       "242  85.4   16  44.5  4.5  16.9  6.5       fire     \n",
       "243  41.1  6.5     8  0.1   6.2    0   not fire     \n",
       "244  45.9  3.5   7.9  0.4   3.4  0.2   not fire     \n",
       "245  79.7  4.3  15.2  1.7   5.1  0.7   not fire     \n",
       "246  67.3  3.8  16.5  1.2   4.8  0.5  not fire      \n",
       "\n",
       "[125 rows x 14 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw.loc[122:]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# While handling nan valuewe get to know there are 2 separate geographical locations in the dataset of which the datasets are specifically given separately.\n",
    "SO lets do some research on the geographical locations of the dataset, to determine if the need be seperately trained for model.\n",
    "\n",
    "### Results:\n",
    "Sure, I can help you with that. Here is an expert analysis of the geography of Bejaia Region and Sidi-Bel Abbes Region in Algeria, to help you determine whether you should train separate models for both of them or a single model:\n",
    "\n",
    "* **Bejaia Region** is located in northeastern Algeria, bordering the Mediterranean Sea. It is a mountainous region with a Mediterranean climate. The average temperature in Bejaia Region is 18°C (64°F), with warm summers and cool winters.\n",
    "* **Sidi-Bel Abbes Region** is located in western Algeria, bordering Morocco. It is a desert region with a hot desert climate. The average temperature in Sidi-Bel Abbes Region is 27°C (81°F), with hot summers and mild winters.\n",
    "\n",
    "Based on their different geographies, it is likely that Bejaia Region and Sidi-Bel Abbes Region have different temperature patterns. Therefore, it would be better to train separate models for each region. This would allow the models to learn the specific factors that affect temperature in each region, and would result in more accurate predictions.\n",
    "\n",
    "Here are some of the factors that could affect the temperature in Bejaia Region and Sidi-Bel Abbes Region:\n",
    "\n",
    "* **Altitude:** Bejaia Region is a mountainous region, while Sidi-Bel Abbes Region is a desert region. Altitude can have a significant impact on temperature, with higher altitudes being cooler.\n",
    "* **Nearness to the sea:** Bejaia Region borders the Mediterranean Sea, while Sidi-Bel Abbes Region does not. The sea can moderate temperatures, making coastal regions cooler in the summer and warmer in the winter.\n",
    "* **Precipitation:** Bejaia Region receives more precipitation than Sidi-Bel Abbes Region. Precipitation can affect temperature by evaporating and releasing latent heat into the atmosphere.\n",
    "* **Vegetation:** Bejaia Region has more vegetation than Sidi-Bel Abbes Region. Vegetation can help to cool the air by shading it and by evaporating water.\n",
    "\n",
    "By taking these factors into account, you can train separate models for Bejaia Region and Sidi-Bel Abbes Region that will be more accurate at predicting temperature in each region."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**So there is an option for weighted modelling. But lets do a more simple first**\n",
    "**Conclusion**\n",
    "- Due to the fact that they have different climates, so it is better to do the modelling separately. But we will also make a combined model.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "raw."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "Bejaia_df =raw.loc[:122]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>01</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>57</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>65.7</td>\n",
       "      <td>3.4</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>02</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>61</td>\n",
       "      <td>13</td>\n",
       "      <td>1.3</td>\n",
       "      <td>64.4</td>\n",
       "      <td>4.1</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>03</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>26</td>\n",
       "      <td>82</td>\n",
       "      <td>22</td>\n",
       "      <td>13.1</td>\n",
       "      <td>47.1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.7</td>\n",
       "      <td>0.1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>04</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>25</td>\n",
       "      <td>89</td>\n",
       "      <td>13</td>\n",
       "      <td>2.5</td>\n",
       "      <td>28.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>05</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>77</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>64.8</td>\n",
       "      <td>3</td>\n",
       "      <td>14.2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118</th>\n",
       "      <td>26</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>31</td>\n",
       "      <td>54</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>82</td>\n",
       "      <td>6</td>\n",
       "      <td>16.3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>6.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>27</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>31</td>\n",
       "      <td>66</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>85.7</td>\n",
       "      <td>8.3</td>\n",
       "      <td>24.9</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>4.1</td>\n",
       "      <td>fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>28</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>32</td>\n",
       "      <td>47</td>\n",
       "      <td>14</td>\n",
       "      <td>0.7</td>\n",
       "      <td>77.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>8.8</td>\n",
       "      <td>1.8</td>\n",
       "      <td>6.8</td>\n",
       "      <td>0.9</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>29</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>26</td>\n",
       "      <td>80</td>\n",
       "      <td>16</td>\n",
       "      <td>1.8</td>\n",
       "      <td>47.4</td>\n",
       "      <td>2.9</td>\n",
       "      <td>7.7</td>\n",
       "      <td>0.3</td>\n",
       "      <td>3</td>\n",
       "      <td>0.1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>30</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>25</td>\n",
       "      <td>78</td>\n",
       "      <td>14</td>\n",
       "      <td>1.4</td>\n",
       "      <td>45</td>\n",
       "      <td>1.9</td>\n",
       "      <td>7.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>2.4</td>\n",
       "      <td>0.1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>122 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    day month  year Temperature  RH  Ws  Rain  FFMC  DMC    DC  ISI  BUI  FWI  \\\n",
       "1    01    06  2012          29  57  18     0  65.7  3.4   7.6  1.3  3.4  0.5   \n",
       "2    02    06  2012          29  61  13   1.3  64.4  4.1   7.6    1  3.9  0.4   \n",
       "3    03    06  2012          26  82  22  13.1  47.1  2.5   7.1  0.3  2.7  0.1   \n",
       "4    04    06  2012          25  89  13   2.5  28.6  1.3   6.9    0  1.7    0   \n",
       "5    05    06  2012          27  77  16     0  64.8    3  14.2  1.2  3.9  0.5   \n",
       "..   ..   ...   ...         ...  ..  ..   ...   ...  ...   ...  ...  ...  ...   \n",
       "118  26    09  2012          31  54  11     0    82    6  16.3  2.5  6.2  1.7   \n",
       "119  27    09  2012          31  66  11     0  85.7  8.3  24.9    4    9  4.1   \n",
       "120  28    09  2012          32  47  14   0.7  77.5  7.1   8.8  1.8  6.8  0.9   \n",
       "121  29    09  2012          26  80  16   1.8  47.4  2.9   7.7  0.3    3  0.1   \n",
       "122  30    09  2012          25  78  14   1.4    45  1.9   7.5  0.2  2.4  0.1   \n",
       "\n",
       "         Classes  \n",
       "1    not fire     \n",
       "2    not fire     \n",
       "3    not fire     \n",
       "4    not fire     \n",
       "5    not fire     \n",
       "..           ...  \n",
       "118  not fire     \n",
       "119      fire     \n",
       "120  not fire     \n",
       "121  not fire     \n",
       "122  not fire     \n",
       "\n",
       "[122 rows x 14 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Bejaia_df =raw.loc[:122]\n",
    "Bejaia_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>01</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>32</td>\n",
       "      <td>71</td>\n",
       "      <td>12</td>\n",
       "      <td>0.7</td>\n",
       "      <td>57.1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.8</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>02</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>73</td>\n",
       "      <td>13</td>\n",
       "      <td>4</td>\n",
       "      <td>55.7</td>\n",
       "      <td>2.7</td>\n",
       "      <td>7.8</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.9</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>03</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>80</td>\n",
       "      <td>14</td>\n",
       "      <td>2</td>\n",
       "      <td>48.7</td>\n",
       "      <td>2.2</td>\n",
       "      <td>7.6</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.6</td>\n",
       "      <td>0.1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>04</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>64</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>79.4</td>\n",
       "      <td>5.2</td>\n",
       "      <td>15.4</td>\n",
       "      <td>2.2</td>\n",
       "      <td>5.6</td>\n",
       "      <td>1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>05</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>32</td>\n",
       "      <td>60</td>\n",
       "      <td>14</td>\n",
       "      <td>0.2</td>\n",
       "      <td>77.1</td>\n",
       "      <td>6</td>\n",
       "      <td>17.6</td>\n",
       "      <td>1.8</td>\n",
       "      <td>6.5</td>\n",
       "      <td>0.9</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>26</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>65</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>85.4</td>\n",
       "      <td>16</td>\n",
       "      <td>44.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>16.9</td>\n",
       "      <td>6.5</td>\n",
       "      <td>fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>27</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>28</td>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>4.4</td>\n",
       "      <td>41.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>8</td>\n",
       "      <td>0.1</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>28</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>87</td>\n",
       "      <td>29</td>\n",
       "      <td>0.5</td>\n",
       "      <td>45.9</td>\n",
       "      <td>3.5</td>\n",
       "      <td>7.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>29</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>54</td>\n",
       "      <td>18</td>\n",
       "      <td>0.1</td>\n",
       "      <td>79.7</td>\n",
       "      <td>4.3</td>\n",
       "      <td>15.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>5.1</td>\n",
       "      <td>0.7</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>30</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>64</td>\n",
       "      <td>15</td>\n",
       "      <td>0.2</td>\n",
       "      <td>67.3</td>\n",
       "      <td>3.8</td>\n",
       "      <td>16.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>4.8</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>122 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    day month  year Temperature  RH  Ws Rain  FFMC  DMC    DC  ISI   BUI  FWI  \\\n",
       "125  01    06  2012          32  71  12  0.7  57.1  2.5   8.2  0.6   2.8  0.2   \n",
       "126  02    06  2012          30  73  13    4  55.7  2.7   7.8  0.6   2.9  0.2   \n",
       "127  03    06  2012          29  80  14    2  48.7  2.2   7.6  0.3   2.6  0.1   \n",
       "128  04    06  2012          30  64  14    0  79.4  5.2  15.4  2.2   5.6    1   \n",
       "129  05    06  2012          32  60  14  0.2  77.1    6  17.6  1.8   6.5  0.9   \n",
       "..   ..   ...   ...         ...  ..  ..  ...   ...  ...   ...  ...   ...  ...   \n",
       "242  26    09  2012          30  65  14    0  85.4   16  44.5  4.5  16.9  6.5   \n",
       "243  27    09  2012          28  87  15  4.4  41.1  6.5     8  0.1   6.2    0   \n",
       "244  28    09  2012          27  87  29  0.5  45.9  3.5   7.9  0.4   3.4  0.2   \n",
       "245  29    09  2012          24  54  18  0.1  79.7  4.3  15.2  1.7   5.1  0.7   \n",
       "246  30    09  2012          24  64  15  0.2  67.3  3.8  16.5  1.2   4.8  0.5   \n",
       "\n",
       "          Classes  \n",
       "125   not fire     \n",
       "126   not fire     \n",
       "127   not fire     \n",
       "128   not fire     \n",
       "129   not fire     \n",
       "..            ...  \n",
       "242       fire     \n",
       "243   not fire     \n",
       "244   not fire     \n",
       "245   not fire     \n",
       "246  not fire      \n",
       "\n",
       "[122 rows x 14 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SidiBel_df=raw.loc[125:]\n",
    "SidiBel_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>01</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>57</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>65.7</td>\n",
       "      <td>3.4</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>02</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>61</td>\n",
       "      <td>13</td>\n",
       "      <td>1.3</td>\n",
       "      <td>64.4</td>\n",
       "      <td>4.1</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>03</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>26</td>\n",
       "      <td>82</td>\n",
       "      <td>22</td>\n",
       "      <td>13.1</td>\n",
       "      <td>47.1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.7</td>\n",
       "      <td>0.1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>04</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>25</td>\n",
       "      <td>89</td>\n",
       "      <td>13</td>\n",
       "      <td>2.5</td>\n",
       "      <td>28.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>05</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>77</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>64.8</td>\n",
       "      <td>3</td>\n",
       "      <td>14.2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>26</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>65</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>85.4</td>\n",
       "      <td>16</td>\n",
       "      <td>44.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>16.9</td>\n",
       "      <td>6.5</td>\n",
       "      <td>fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>27</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>28</td>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>4.4</td>\n",
       "      <td>41.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>8</td>\n",
       "      <td>0.1</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>28</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>87</td>\n",
       "      <td>29</td>\n",
       "      <td>0.5</td>\n",
       "      <td>45.9</td>\n",
       "      <td>3.5</td>\n",
       "      <td>7.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>29</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>54</td>\n",
       "      <td>18</td>\n",
       "      <td>0.1</td>\n",
       "      <td>79.7</td>\n",
       "      <td>4.3</td>\n",
       "      <td>15.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>5.1</td>\n",
       "      <td>0.7</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>30</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>64</td>\n",
       "      <td>15</td>\n",
       "      <td>0.2</td>\n",
       "      <td>67.3</td>\n",
       "      <td>3.8</td>\n",
       "      <td>16.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>4.8</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>244 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    day month  year Temperature  RH  Ws  Rain  FFMC  DMC    DC  ISI   BUI  \\\n",
       "1    01    06  2012          29  57  18     0  65.7  3.4   7.6  1.3   3.4   \n",
       "2    02    06  2012          29  61  13   1.3  64.4  4.1   7.6    1   3.9   \n",
       "3    03    06  2012          26  82  22  13.1  47.1  2.5   7.1  0.3   2.7   \n",
       "4    04    06  2012          25  89  13   2.5  28.6  1.3   6.9    0   1.7   \n",
       "5    05    06  2012          27  77  16     0  64.8    3  14.2  1.2   3.9   \n",
       "..   ..   ...   ...         ...  ..  ..   ...   ...  ...   ...  ...   ...   \n",
       "242  26    09  2012          30  65  14     0  85.4   16  44.5  4.5  16.9   \n",
       "243  27    09  2012          28  87  15   4.4  41.1  6.5     8  0.1   6.2   \n",
       "244  28    09  2012          27  87  29   0.5  45.9  3.5   7.9  0.4   3.4   \n",
       "245  29    09  2012          24  54  18   0.1  79.7  4.3  15.2  1.7   5.1   \n",
       "246  30    09  2012          24  64  15   0.2  67.3  3.8  16.5  1.2   4.8   \n",
       "\n",
       "     FWI       Classes  \n",
       "1    0.5   not fire     \n",
       "2    0.4   not fire     \n",
       "3    0.1   not fire     \n",
       "4      0   not fire     \n",
       "5    0.5   not fire     \n",
       "..   ...           ...  \n",
       "242  6.5       fire     \n",
       "243    0   not fire     \n",
       "244  0.2   not fire     \n",
       "245  0.7   not fire     \n",
       "246  0.5  not fire      \n",
       "\n",
       "[244 rows x 14 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "algerian_df=pd.concat([Bejaia_df,SidiBel_df])\n",
    "algerian_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So now that it is seprated and combined again. What we will be doing is doing basic Feature Engineering on all three and than check which one worksd best for us."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(day            0\n",
       " month          0\n",
       " year           0\n",
       " Temperature    0\n",
       " RH             0\n",
       " Ws             0\n",
       " Rain           0\n",
       " FFMC           0\n",
       " DMC            0\n",
       " DC             0\n",
       " ISI            0\n",
       " BUI            0\n",
       " FWI            0\n",
       " Classes        1\n",
       " dtype: int64,)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "algerian_df.isna().sum(),\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It seems Classes of Bejaia and algerian are having missing values.\n",
    "Lets ceck them out handle them.\n",
    "*Note, You should always handle the rows having the missing value."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>14</td>\n",
       "      <td>07</td>\n",
       "      <td>2012</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>18</td>\n",
       "      <td>0.2</td>\n",
       "      <td>88.9</td>\n",
       "      <td>12.9</td>\n",
       "      <td>14.6 9</td>\n",
       "      <td>12.5</td>\n",
       "      <td>10.4</td>\n",
       "      <td>fire</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    day month  year Temperature  RH  Ws Rain  FFMC   DMC      DC   ISI   BUI  \\\n",
       "168  14    07  2012          37  37  18  0.2  88.9  12.9  14.6 9  12.5  10.4   \n",
       "\n",
       "         FWI Classes  \n",
       "168  fire        NaN  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "algerian_df[algerian_df['Classes'].isna()]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As  you can see the value of classes column is miss placed lets fix that."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Filling NaN first.\n",
    "\n",
    "algerian_df['Classes'].fillna('fire',inplace=True)\n",
    "# Bejaia_df['Classes'].fillna('fire',inplace=True)  \n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Handling Classes Categorical values\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['not fire   ', 'fire   ', 'fire', 'fire ', 'not fire', 'not fire ',\n",
       "       'not fire     ', 'not fire    '], dtype=object)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "algerian_df['Classes'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We need to strip them first before `OneHotEncoder` can be applied.\n",
    "Or we could do it in one step using apply:\n",
    "```python\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>01</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>57</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>65.7</td>\n",
       "      <td>3.4</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>02</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>61</td>\n",
       "      <td>13</td>\n",
       "      <td>1.3</td>\n",
       "      <td>64.4</td>\n",
       "      <td>4.1</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>03</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>26</td>\n",
       "      <td>82</td>\n",
       "      <td>22</td>\n",
       "      <td>13.1</td>\n",
       "      <td>47.1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.7</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>04</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>25</td>\n",
       "      <td>89</td>\n",
       "      <td>13</td>\n",
       "      <td>2.5</td>\n",
       "      <td>28.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>05</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>77</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>64.8</td>\n",
       "      <td>3</td>\n",
       "      <td>14.2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>26</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>65</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>85.4</td>\n",
       "      <td>16</td>\n",
       "      <td>44.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>16.9</td>\n",
       "      <td>6.5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>27</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>28</td>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>4.4</td>\n",
       "      <td>41.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>8</td>\n",
       "      <td>0.1</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>28</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>87</td>\n",
       "      <td>29</td>\n",
       "      <td>0.5</td>\n",
       "      <td>45.9</td>\n",
       "      <td>3.5</td>\n",
       "      <td>7.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>29</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>54</td>\n",
       "      <td>18</td>\n",
       "      <td>0.1</td>\n",
       "      <td>79.7</td>\n",
       "      <td>4.3</td>\n",
       "      <td>15.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>5.1</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>30</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>64</td>\n",
       "      <td>15</td>\n",
       "      <td>0.2</td>\n",
       "      <td>67.3</td>\n",
       "      <td>3.8</td>\n",
       "      <td>16.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>4.8</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>244 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    day month  year Temperature  RH  Ws  Rain  FFMC  DMC    DC  ISI   BUI  \\\n",
       "1    01    06  2012          29  57  18     0  65.7  3.4   7.6  1.3   3.4   \n",
       "2    02    06  2012          29  61  13   1.3  64.4  4.1   7.6    1   3.9   \n",
       "3    03    06  2012          26  82  22  13.1  47.1  2.5   7.1  0.3   2.7   \n",
       "4    04    06  2012          25  89  13   2.5  28.6  1.3   6.9    0   1.7   \n",
       "5    05    06  2012          27  77  16     0  64.8    3  14.2  1.2   3.9   \n",
       "..   ..   ...   ...         ...  ..  ..   ...   ...  ...   ...  ...   ...   \n",
       "242  26    09  2012          30  65  14     0  85.4   16  44.5  4.5  16.9   \n",
       "243  27    09  2012          28  87  15   4.4  41.1  6.5     8  0.1   6.2   \n",
       "244  28    09  2012          27  87  29   0.5  45.9  3.5   7.9  0.4   3.4   \n",
       "245  29    09  2012          24  54  18   0.1  79.7  4.3  15.2  1.7   5.1   \n",
       "246  30    09  2012          24  64  15   0.2  67.3  3.8  16.5  1.2   4.8   \n",
       "\n",
       "     FWI  Classes  \n",
       "1    0.5        0  \n",
       "2    0.4        0  \n",
       "3    0.1        0  \n",
       "4      0        0  \n",
       "5    0.5        0  \n",
       "..   ...      ...  \n",
       "242  6.5        1  \n",
       "243    0        0  \n",
       "244  0.2        0  \n",
       "245  0.7        0  \n",
       "246  0.5        0  \n",
       "\n",
       "[244 rows x 14 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "algerian_df['Classes']=algerian_df['Classes'].apply(lambda x: int(x.strip()=='fire'))\n",
    "algerian_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>01</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>32</td>\n",
       "      <td>71</td>\n",
       "      <td>12</td>\n",
       "      <td>0.7</td>\n",
       "      <td>57.1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.8</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>02</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>73</td>\n",
       "      <td>13</td>\n",
       "      <td>4</td>\n",
       "      <td>55.7</td>\n",
       "      <td>2.7</td>\n",
       "      <td>7.8</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.9</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>03</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>80</td>\n",
       "      <td>14</td>\n",
       "      <td>2</td>\n",
       "      <td>48.7</td>\n",
       "      <td>2.2</td>\n",
       "      <td>7.6</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.6</td>\n",
       "      <td>0.1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>04</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>64</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>79.4</td>\n",
       "      <td>5.2</td>\n",
       "      <td>15.4</td>\n",
       "      <td>2.2</td>\n",
       "      <td>5.6</td>\n",
       "      <td>1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>05</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>32</td>\n",
       "      <td>60</td>\n",
       "      <td>14</td>\n",
       "      <td>0.2</td>\n",
       "      <td>77.1</td>\n",
       "      <td>6</td>\n",
       "      <td>17.6</td>\n",
       "      <td>1.8</td>\n",
       "      <td>6.5</td>\n",
       "      <td>0.9</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>26</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>65</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>85.4</td>\n",
       "      <td>16</td>\n",
       "      <td>44.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>16.9</td>\n",
       "      <td>6.5</td>\n",
       "      <td>fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>27</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>28</td>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>4.4</td>\n",
       "      <td>41.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>8</td>\n",
       "      <td>0.1</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>28</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>87</td>\n",
       "      <td>29</td>\n",
       "      <td>0.5</td>\n",
       "      <td>45.9</td>\n",
       "      <td>3.5</td>\n",
       "      <td>7.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>29</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>54</td>\n",
       "      <td>18</td>\n",
       "      <td>0.1</td>\n",
       "      <td>79.7</td>\n",
       "      <td>4.3</td>\n",
       "      <td>15.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>5.1</td>\n",
       "      <td>0.7</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>30</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>64</td>\n",
       "      <td>15</td>\n",
       "      <td>0.2</td>\n",
       "      <td>67.3</td>\n",
       "      <td>3.8</td>\n",
       "      <td>16.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>4.8</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>122 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    day month  year Temperature  RH  Ws Rain  FFMC  DMC    DC  ISI   BUI  FWI  \\\n",
       "125  01    06  2012          32  71  12  0.7  57.1  2.5   8.2  0.6   2.8  0.2   \n",
       "126  02    06  2012          30  73  13    4  55.7  2.7   7.8  0.6   2.9  0.2   \n",
       "127  03    06  2012          29  80  14    2  48.7  2.2   7.6  0.3   2.6  0.1   \n",
       "128  04    06  2012          30  64  14    0  79.4  5.2  15.4  2.2   5.6    1   \n",
       "129  05    06  2012          32  60  14  0.2  77.1    6  17.6  1.8   6.5  0.9   \n",
       "..   ..   ...   ...         ...  ..  ..  ...   ...  ...   ...  ...   ...  ...   \n",
       "242  26    09  2012          30  65  14    0  85.4   16  44.5  4.5  16.9  6.5   \n",
       "243  27    09  2012          28  87  15  4.4  41.1  6.5     8  0.1   6.2    0   \n",
       "244  28    09  2012          27  87  29  0.5  45.9  3.5   7.9  0.4   3.4  0.2   \n",
       "245  29    09  2012          24  54  18  0.1  79.7  4.3  15.2  1.7   5.1  0.7   \n",
       "246  30    09  2012          24  64  15  0.2  67.3  3.8  16.5  1.2   4.8  0.5   \n",
       "\n",
       "          Classes  \n",
       "125   not fire     \n",
       "126   not fire     \n",
       "127   not fire     \n",
       "128   not fire     \n",
       "129   not fire     \n",
       "..            ...  \n",
       "242       fire     \n",
       "243   not fire     \n",
       "244   not fire     \n",
       "245   not fire     \n",
       "246  not fire      \n",
       "\n",
       "[122 rows x 14 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SidiBel_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The previous run was done to check if the referencing is working. \n",
    "\n",
    "**It didnt.**\n",
    "\n",
    "My hypothesis is the referencing didnt work becuase while using `apply` we replaced the reference itself. \n",
    "\n",
    "Lets intentionally use referencing for our convinience."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>01</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>57</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>65.7</td>\n",
       "      <td>3.4</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>02</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>61</td>\n",
       "      <td>13</td>\n",
       "      <td>1.3</td>\n",
       "      <td>64.4</td>\n",
       "      <td>4.1</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>03</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>26</td>\n",
       "      <td>82</td>\n",
       "      <td>22</td>\n",
       "      <td>13.1</td>\n",
       "      <td>47.1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.7</td>\n",
       "      <td>0.1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>04</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>25</td>\n",
       "      <td>89</td>\n",
       "      <td>13</td>\n",
       "      <td>2.5</td>\n",
       "      <td>28.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>05</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>77</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>64.8</td>\n",
       "      <td>3</td>\n",
       "      <td>14.2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>26</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>65</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>85.4</td>\n",
       "      <td>16</td>\n",
       "      <td>44.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>16.9</td>\n",
       "      <td>6.5</td>\n",
       "      <td>fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>27</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>28</td>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>4.4</td>\n",
       "      <td>41.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>8</td>\n",
       "      <td>0.1</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>28</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>87</td>\n",
       "      <td>29</td>\n",
       "      <td>0.5</td>\n",
       "      <td>45.9</td>\n",
       "      <td>3.5</td>\n",
       "      <td>7.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>29</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>54</td>\n",
       "      <td>18</td>\n",
       "      <td>0.1</td>\n",
       "      <td>79.7</td>\n",
       "      <td>4.3</td>\n",
       "      <td>15.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>5.1</td>\n",
       "      <td>0.7</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>30</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>64</td>\n",
       "      <td>15</td>\n",
       "      <td>0.2</td>\n",
       "      <td>67.3</td>\n",
       "      <td>3.8</td>\n",
       "      <td>16.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>4.8</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>244 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    day month  year Temperature  RH  Ws  Rain  FFMC  DMC    DC  ISI   BUI  \\\n",
       "1    01    06  2012          29  57  18     0  65.7  3.4   7.6  1.3   3.4   \n",
       "2    02    06  2012          29  61  13   1.3  64.4  4.1   7.6    1   3.9   \n",
       "3    03    06  2012          26  82  22  13.1  47.1  2.5   7.1  0.3   2.7   \n",
       "4    04    06  2012          25  89  13   2.5  28.6  1.3   6.9    0   1.7   \n",
       "5    05    06  2012          27  77  16     0  64.8    3  14.2  1.2   3.9   \n",
       "..   ..   ...   ...         ...  ..  ..   ...   ...  ...   ...  ...   ...   \n",
       "242  26    09  2012          30  65  14     0  85.4   16  44.5  4.5  16.9   \n",
       "243  27    09  2012          28  87  15   4.4  41.1  6.5     8  0.1   6.2   \n",
       "244  28    09  2012          27  87  29   0.5  45.9  3.5   7.9  0.4   3.4   \n",
       "245  29    09  2012          24  54  18   0.1  79.7  4.3  15.2  1.7   5.1   \n",
       "246  30    09  2012          24  64  15   0.2  67.3  3.8  16.5  1.2   4.8   \n",
       "\n",
       "     FWI       Classes  \n",
       "1    0.5   not fire     \n",
       "2    0.4   not fire     \n",
       "3    0.1   not fire     \n",
       "4      0   not fire     \n",
       "5    0.5   not fire     \n",
       "..   ...           ...  \n",
       "242  6.5       fire     \n",
       "243    0   not fire     \n",
       "244  0.2   not fire     \n",
       "245  0.7   not fire     \n",
       "246  0.5  not fire      \n",
       "\n",
       "[244 rows x 14 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "algerian_df=pd.concat([Bejaia_df,SidiBel_df]).copy(deep=True)\n",
    "algerian_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>01</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>57</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>65.7</td>\n",
       "      <td>3.4</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>02</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>61</td>\n",
       "      <td>13</td>\n",
       "      <td>1.3</td>\n",
       "      <td>64.4</td>\n",
       "      <td>4.1</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>03</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>26</td>\n",
       "      <td>82</td>\n",
       "      <td>22</td>\n",
       "      <td>13.1</td>\n",
       "      <td>47.1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.7</td>\n",
       "      <td>0.1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>04</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>25</td>\n",
       "      <td>89</td>\n",
       "      <td>13</td>\n",
       "      <td>2.5</td>\n",
       "      <td>28.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>05</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>77</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>64.8</td>\n",
       "      <td>3</td>\n",
       "      <td>14.2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118</th>\n",
       "      <td>26</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>31</td>\n",
       "      <td>54</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>82</td>\n",
       "      <td>6</td>\n",
       "      <td>16.3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>6.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>27</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>31</td>\n",
       "      <td>66</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>85.7</td>\n",
       "      <td>8.3</td>\n",
       "      <td>24.9</td>\n",
       "      <td>4</td>\n",
       "      <td>9</td>\n",
       "      <td>4.1</td>\n",
       "      <td>fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>28</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>32</td>\n",
       "      <td>47</td>\n",
       "      <td>14</td>\n",
       "      <td>0.7</td>\n",
       "      <td>77.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>8.8</td>\n",
       "      <td>1.8</td>\n",
       "      <td>6.8</td>\n",
       "      <td>0.9</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>29</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>26</td>\n",
       "      <td>80</td>\n",
       "      <td>16</td>\n",
       "      <td>1.8</td>\n",
       "      <td>47.4</td>\n",
       "      <td>2.9</td>\n",
       "      <td>7.7</td>\n",
       "      <td>0.3</td>\n",
       "      <td>3</td>\n",
       "      <td>0.1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>30</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>25</td>\n",
       "      <td>78</td>\n",
       "      <td>14</td>\n",
       "      <td>1.4</td>\n",
       "      <td>45</td>\n",
       "      <td>1.9</td>\n",
       "      <td>7.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>2.4</td>\n",
       "      <td>0.1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>122 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    day month  year Temperature  RH  Ws  Rain  FFMC  DMC    DC  ISI  BUI  FWI  \\\n",
       "1    01    06  2012          29  57  18     0  65.7  3.4   7.6  1.3  3.4  0.5   \n",
       "2    02    06  2012          29  61  13   1.3  64.4  4.1   7.6    1  3.9  0.4   \n",
       "3    03    06  2012          26  82  22  13.1  47.1  2.5   7.1  0.3  2.7  0.1   \n",
       "4    04    06  2012          25  89  13   2.5  28.6  1.3   6.9    0  1.7    0   \n",
       "5    05    06  2012          27  77  16     0  64.8    3  14.2  1.2  3.9  0.5   \n",
       "..   ..   ...   ...         ...  ..  ..   ...   ...  ...   ...  ...  ...  ...   \n",
       "118  26    09  2012          31  54  11     0    82    6  16.3  2.5  6.2  1.7   \n",
       "119  27    09  2012          31  66  11     0  85.7  8.3  24.9    4    9  4.1   \n",
       "120  28    09  2012          32  47  14   0.7  77.5  7.1   8.8  1.8  6.8  0.9   \n",
       "121  29    09  2012          26  80  16   1.8  47.4  2.9   7.7  0.3    3  0.1   \n",
       "122  30    09  2012          25  78  14   1.4    45  1.9   7.5  0.2  2.4  0.1   \n",
       "\n",
       "         Classes  \n",
       "1    not fire     \n",
       "2    not fire     \n",
       "3    not fire     \n",
       "4    not fire     \n",
       "5    not fire     \n",
       "..           ...  \n",
       "118  not fire     \n",
       "119      fire     \n",
       "120  not fire     \n",
       "121  not fire     \n",
       "122  not fire     \n",
       "\n",
       "[122 rows x 14 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Bejaia_df=algerian_df.loc[Bejaia_df.index].copy()\n",
    "Bejaia_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>Classes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>01</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>32</td>\n",
       "      <td>71</td>\n",
       "      <td>12</td>\n",
       "      <td>0.7</td>\n",
       "      <td>57.1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>8.2</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.8</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>02</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>73</td>\n",
       "      <td>13</td>\n",
       "      <td>4</td>\n",
       "      <td>55.7</td>\n",
       "      <td>2.7</td>\n",
       "      <td>7.8</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.9</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>03</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>80</td>\n",
       "      <td>14</td>\n",
       "      <td>2</td>\n",
       "      <td>48.7</td>\n",
       "      <td>2.2</td>\n",
       "      <td>7.6</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.6</td>\n",
       "      <td>0.1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>04</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>64</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>79.4</td>\n",
       "      <td>5.2</td>\n",
       "      <td>15.4</td>\n",
       "      <td>2.2</td>\n",
       "      <td>5.6</td>\n",
       "      <td>1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>05</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>32</td>\n",
       "      <td>60</td>\n",
       "      <td>14</td>\n",
       "      <td>0.2</td>\n",
       "      <td>77.1</td>\n",
       "      <td>6</td>\n",
       "      <td>17.6</td>\n",
       "      <td>1.8</td>\n",
       "      <td>6.5</td>\n",
       "      <td>0.9</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>26</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>65</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>85.4</td>\n",
       "      <td>16</td>\n",
       "      <td>44.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>16.9</td>\n",
       "      <td>6.5</td>\n",
       "      <td>fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>27</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>28</td>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>4.4</td>\n",
       "      <td>41.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>8</td>\n",
       "      <td>0.1</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>28</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>87</td>\n",
       "      <td>29</td>\n",
       "      <td>0.5</td>\n",
       "      <td>45.9</td>\n",
       "      <td>3.5</td>\n",
       "      <td>7.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>29</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>54</td>\n",
       "      <td>18</td>\n",
       "      <td>0.1</td>\n",
       "      <td>79.7</td>\n",
       "      <td>4.3</td>\n",
       "      <td>15.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>5.1</td>\n",
       "      <td>0.7</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>30</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>64</td>\n",
       "      <td>15</td>\n",
       "      <td>0.2</td>\n",
       "      <td>67.3</td>\n",
       "      <td>3.8</td>\n",
       "      <td>16.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>4.8</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>122 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    day month  year Temperature  RH  Ws Rain  FFMC  DMC    DC  ISI   BUI  FWI  \\\n",
       "125  01    06  2012          32  71  12  0.7  57.1  2.5   8.2  0.6   2.8  0.2   \n",
       "126  02    06  2012          30  73  13    4  55.7  2.7   7.8  0.6   2.9  0.2   \n",
       "127  03    06  2012          29  80  14    2  48.7  2.2   7.6  0.3   2.6  0.1   \n",
       "128  04    06  2012          30  64  14    0  79.4  5.2  15.4  2.2   5.6    1   \n",
       "129  05    06  2012          32  60  14  0.2  77.1    6  17.6  1.8   6.5  0.9   \n",
       "..   ..   ...   ...         ...  ..  ..  ...   ...  ...   ...  ...   ...  ...   \n",
       "242  26    09  2012          30  65  14    0  85.4   16  44.5  4.5  16.9  6.5   \n",
       "243  27    09  2012          28  87  15  4.4  41.1  6.5     8  0.1   6.2    0   \n",
       "244  28    09  2012          27  87  29  0.5  45.9  3.5   7.9  0.4   3.4  0.2   \n",
       "245  29    09  2012          24  54  18  0.1  79.7  4.3  15.2  1.7   5.1  0.7   \n",
       "246  30    09  2012          24  64  15  0.2  67.3  3.8  16.5  1.2   4.8  0.5   \n",
       "\n",
       "          Classes  \n",
       "125   not fire     \n",
       "126   not fire     \n",
       "127   not fire     \n",
       "128   not fire     \n",
       "129   not fire     \n",
       "..            ...  \n",
       "242       fire     \n",
       "243   not fire     \n",
       "244   not fire     \n",
       "245   not fire     \n",
       "246  not fire      \n",
       "\n",
       "[122 rows x 14 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SidiBel_df=algerian_df.loc[SidiBel_df.index].copy()\n",
    "SidiBel_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "algerian_df=algerian_df.rename({'Classes':'isFire'},axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>isFire</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>01</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>57</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>65.7</td>\n",
       "      <td>3.4</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>02</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>29</td>\n",
       "      <td>61</td>\n",
       "      <td>13</td>\n",
       "      <td>1.3</td>\n",
       "      <td>64.4</td>\n",
       "      <td>4.1</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>03</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>26</td>\n",
       "      <td>82</td>\n",
       "      <td>22</td>\n",
       "      <td>13.1</td>\n",
       "      <td>47.1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.7</td>\n",
       "      <td>0.1</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>04</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>25</td>\n",
       "      <td>89</td>\n",
       "      <td>13</td>\n",
       "      <td>2.5</td>\n",
       "      <td>28.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>05</td>\n",
       "      <td>06</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>77</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>64.8</td>\n",
       "      <td>3</td>\n",
       "      <td>14.2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>26</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>30</td>\n",
       "      <td>65</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>85.4</td>\n",
       "      <td>16</td>\n",
       "      <td>44.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>16.9</td>\n",
       "      <td>6.5</td>\n",
       "      <td>fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>27</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>28</td>\n",
       "      <td>87</td>\n",
       "      <td>15</td>\n",
       "      <td>4.4</td>\n",
       "      <td>41.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>8</td>\n",
       "      <td>0.1</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>28</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>27</td>\n",
       "      <td>87</td>\n",
       "      <td>29</td>\n",
       "      <td>0.5</td>\n",
       "      <td>45.9</td>\n",
       "      <td>3.5</td>\n",
       "      <td>7.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>29</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>54</td>\n",
       "      <td>18</td>\n",
       "      <td>0.1</td>\n",
       "      <td>79.7</td>\n",
       "      <td>4.3</td>\n",
       "      <td>15.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>5.1</td>\n",
       "      <td>0.7</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>30</td>\n",
       "      <td>09</td>\n",
       "      <td>2012</td>\n",
       "      <td>24</td>\n",
       "      <td>64</td>\n",
       "      <td>15</td>\n",
       "      <td>0.2</td>\n",
       "      <td>67.3</td>\n",
       "      <td>3.8</td>\n",
       "      <td>16.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>4.8</td>\n",
       "      <td>0.5</td>\n",
       "      <td>not fire</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>244 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    day month  year Temperature  RH  Ws  Rain  FFMC  DMC    DC  ISI   BUI  \\\n",
       "1    01    06  2012          29  57  18     0  65.7  3.4   7.6  1.3   3.4   \n",
       "2    02    06  2012          29  61  13   1.3  64.4  4.1   7.6    1   3.9   \n",
       "3    03    06  2012          26  82  22  13.1  47.1  2.5   7.1  0.3   2.7   \n",
       "4    04    06  2012          25  89  13   2.5  28.6  1.3   6.9    0   1.7   \n",
       "5    05    06  2012          27  77  16     0  64.8    3  14.2  1.2   3.9   \n",
       "..   ..   ...   ...         ...  ..  ..   ...   ...  ...   ...  ...   ...   \n",
       "242  26    09  2012          30  65  14     0  85.4   16  44.5  4.5  16.9   \n",
       "243  27    09  2012          28  87  15   4.4  41.1  6.5     8  0.1   6.2   \n",
       "244  28    09  2012          27  87  29   0.5  45.9  3.5   7.9  0.4   3.4   \n",
       "245  29    09  2012          24  54  18   0.1  79.7  4.3  15.2  1.7   5.1   \n",
       "246  30    09  2012          24  64  15   0.2  67.3  3.8  16.5  1.2   4.8   \n",
       "\n",
       "     FWI        isFire  \n",
       "1    0.5   not fire     \n",
       "2    0.4   not fire     \n",
       "3    0.1   not fire     \n",
       "4      0   not fire     \n",
       "5    0.5   not fire     \n",
       "..   ...           ...  \n",
       "242  6.5       fire     \n",
       "243    0   not fire     \n",
       "244  0.2   not fire     \n",
       "245  0.7   not fire     \n",
       "246  0.5  not fire      \n",
       "\n",
       "[244 rows x 14 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "algerian_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "algerian_df['day']=algerian_df['day'].astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 244 entries, 1 to 246\n",
      "Data columns (total 14 columns):\n",
      " #   Column       Non-Null Count  Dtype \n",
      "---  ------       --------------  ----- \n",
      " 0   day          244 non-null    int32 \n",
      " 1   month        244 non-null    object\n",
      " 2   year         244 non-null    object\n",
      " 3   Temperature  244 non-null    object\n",
      " 4   RH           244 non-null    object\n",
      " 5   Ws           244 non-null    object\n",
      " 6   Rain         244 non-null    object\n",
      " 7   FFMC         244 non-null    object\n",
      " 8   DMC          244 non-null    object\n",
      " 9   DC           244 non-null    object\n",
      " 10  ISI          244 non-null    object\n",
      " 11  BUI          244 non-null    object\n",
      " 12  FWI          244 non-null    object\n",
      " 13  isFire       243 non-null    object\n",
      "dtypes: int32(1), object(13)\n",
      "memory usage: 35.7+ KB\n"
     ]
    }
   ],
   "source": [
    "algerian_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "day             int32\n",
       "month           int32\n",
       "year           object\n",
       "Temperature    object\n",
       "RH             object\n",
       "Ws             object\n",
       "Rain           object\n",
       "FFMC           object\n",
       "DMC            object\n",
       "DC             object\n",
       "ISI            object\n",
       "BUI            object\n",
       "FWI            object\n",
       "isFire         object\n",
       "dtype: object"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "algerian_df['month']=algerian_df['month'].astype(int)\n",
    "algerian_df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "algerian_df['year']=algerian_df['year'].astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "day              int32\n",
       "month            int32\n",
       "year             int32\n",
       "Temperature    float64\n",
       "RH              object\n",
       "Ws              object\n",
       "Rain            object\n",
       "FFMC            object\n",
       "DMC             object\n",
       "DC              object\n",
       "ISI             object\n",
       "BUI             object\n",
       "FWI             object\n",
       "isFire          object\n",
       "dtype: object"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "algerian_df['Temperature']=algerian_df['Temperature'].astype(float)\n",
    "algerian_df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 244 entries, 1 to 246\n",
      "Data columns (total 14 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   day          244 non-null    int32  \n",
      " 1   month        244 non-null    int32  \n",
      " 2   year         244 non-null    int32  \n",
      " 3   Temperature  244 non-null    float64\n",
      " 4   RH           244 non-null    float64\n",
      " 5   Ws           244 non-null    object \n",
      " 6   Rain         244 non-null    object \n",
      " 7   FFMC         244 non-null    object \n",
      " 8   DMC          244 non-null    object \n",
      " 9   DC           244 non-null    object \n",
      " 10  ISI          244 non-null    object \n",
      " 11  BUI          244 non-null    object \n",
      " 12  FWI          244 non-null    object \n",
      " 13  isFire       243 non-null    object \n",
      "dtypes: float64(2), int32(3), object(9)\n",
      "memory usage: 33.8+ KB\n"
     ]
    }
   ],
   "source": [
    "algerian_df['RH']=algerian_df['RH'].astype(float)\n",
    "algerian_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 244 entries, 1 to 246\n",
      "Data columns (total 14 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   day          244 non-null    int32  \n",
      " 1   month        244 non-null    int32  \n",
      " 2   year         244 non-null    int32  \n",
      " 3   Temperature  244 non-null    float64\n",
      " 4   RH           244 non-null    float64\n",
      " 5   Ws           244 non-null    float64\n",
      " 6   Rain         244 non-null    object \n",
      " 7   FFMC         244 non-null    object \n",
      " 8   DMC          244 non-null    object \n",
      " 9   DC           244 non-null    object \n",
      " 10  ISI          244 non-null    object \n",
      " 11  BUI          244 non-null    object \n",
      " 12  FWI          244 non-null    object \n",
      " 13  isFire       243 non-null    object \n",
      "dtypes: float64(3), int32(3), object(8)\n",
      "memory usage: 33.8+ KB\n"
     ]
    }
   ],
   "source": [
    "algerian_df['Ws']=algerian_df['Ws'].astype(float)\n",
    "algerian_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 244 entries, 1 to 246\n",
      "Data columns (total 14 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   day          244 non-null    int32  \n",
      " 1   month        244 non-null    int32  \n",
      " 2   year         244 non-null    int32  \n",
      " 3   Temperature  244 non-null    float64\n",
      " 4   RH           244 non-null    float64\n",
      " 5   Ws           244 non-null    float64\n",
      " 6   Rain         244 non-null    float64\n",
      " 7   FFMC         244 non-null    object \n",
      " 8   DMC          244 non-null    object \n",
      " 9   DC           244 non-null    object \n",
      " 10  ISI          244 non-null    object \n",
      " 11  BUI          244 non-null    object \n",
      " 12  FWI          244 non-null    object \n",
      " 13  isFire       243 non-null    object \n",
      "dtypes: float64(4), int32(3), object(7)\n",
      "memory usage: 33.8+ KB\n"
     ]
    }
   ],
   "source": [
    "algerian_df['Rain']=algerian_df['Rain'].astype(float)\n",
    "algerian_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 244 entries, 1 to 246\n",
      "Data columns (total 14 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   day          244 non-null    int32  \n",
      " 1   month        244 non-null    int32  \n",
      " 2   year         244 non-null    int32  \n",
      " 3   Temperature  244 non-null    float64\n",
      " 4   RH           244 non-null    float64\n",
      " 5   Ws           244 non-null    float64\n",
      " 6   Rain         244 non-null    float64\n",
      " 7   FFMC         244 non-null    float64\n",
      " 8   DMC          244 non-null    object \n",
      " 9   DC           244 non-null    object \n",
      " 10  ISI          244 non-null    object \n",
      " 11  BUI          244 non-null    object \n",
      " 12  FWI          244 non-null    object \n",
      " 13  isFire       243 non-null    object \n",
      "dtypes: float64(5), int32(3), object(6)\n",
      "memory usage: 33.8+ KB\n"
     ]
    }
   ],
   "source": [
    "algerian_df['FFMC']=algerian_df['FFMC'].astype(float)\n",
    "algerian_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 244 entries, 1 to 246\n",
      "Data columns (total 14 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   day          244 non-null    int32  \n",
      " 1   month        244 non-null    int32  \n",
      " 2   year         244 non-null    int32  \n",
      " 3   Temperature  244 non-null    float64\n",
      " 4   RH           244 non-null    float64\n",
      " 5   Ws           244 non-null    float64\n",
      " 6   Rain         244 non-null    float64\n",
      " 7   FFMC         244 non-null    float64\n",
      " 8   DMC          244 non-null    float64\n",
      " 9   DC           244 non-null    object \n",
      " 10  ISI          244 non-null    object \n",
      " 11  BUI          244 non-null    object \n",
      " 12  FWI          244 non-null    object \n",
      " 13  isFire       243 non-null    object \n",
      "dtypes: float64(6), int32(3), object(5)\n",
      "memory usage: 33.8+ KB\n"
     ]
    }
   ],
   "source": [
    "\n",
    "algerian_df['DMC']=algerian_df['DMC'].astype(float)\n",
    "algerian_df.info()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ValueError(\"could not convert string to float: '14.6 9'\")"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "try:\n",
    "    algerian_df['DC']=algerian_df['DC'].astype(float)\n",
    "    algerian_df.info()\n",
    "except Exception as e:\n",
    "    display(e)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 244 entries, 1 to 246\n",
      "Data columns (total 14 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   day          244 non-null    int32  \n",
      " 1   month        244 non-null    int32  \n",
      " 2   year         244 non-null    int32  \n",
      " 3   Temperature  244 non-null    float64\n",
      " 4   RH           244 non-null    float64\n",
      " 5   Ws           244 non-null    float64\n",
      " 6   Rain         244 non-null    float64\n",
      " 7   FFMC         244 non-null    float64\n",
      " 8   DMC          244 non-null    float64\n",
      " 9   DC           244 non-null    float64\n",
      " 10  ISI          244 non-null    object \n",
      " 11  BUI          244 non-null    object \n",
      " 12  FWI          244 non-null    object \n",
      " 13  isFire       243 non-null    object \n",
      "dtypes: float64(7), int32(3), object(4)\n",
      "memory usage: 33.8+ KB\n"
     ]
    }
   ],
   "source": [
    "# using apply to remove any spaces exist in the data\n",
    "algerian_df['DC']=algerian_df['DC'].apply(lambda x: float(x.replace(\" \",\"\")))\n",
    "algerian_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 244 entries, 1 to 246\n",
      "Data columns (total 14 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   day          244 non-null    int32  \n",
      " 1   month        244 non-null    int32  \n",
      " 2   year         244 non-null    int32  \n",
      " 3   Temperature  244 non-null    float64\n",
      " 4   RH           244 non-null    float64\n",
      " 5   Ws           244 non-null    float64\n",
      " 6   Rain         244 non-null    float64\n",
      " 7   FFMC         244 non-null    float64\n",
      " 8   DMC          244 non-null    float64\n",
      " 9   DC           244 non-null    float64\n",
      " 10  ISI          244 non-null    float64\n",
      " 11  BUI          244 non-null    object \n",
      " 12  FWI          244 non-null    object \n",
      " 13  isFire       243 non-null    object \n",
      "dtypes: float64(8), int32(3), object(3)\n",
      "memory usage: 33.8+ KB\n"
     ]
    }
   ],
   "source": [
    "algerian_df['ISI']=algerian_df['ISI'].astype(float)\n",
    "algerian_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ValueError(\"could not convert string to float: 'fire   '\")"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "try:\n",
    "    algerian_df['FWI']=algerian_df['FWI'].astype(float)\n",
    "    algerian_df.info()\n",
    "except Exception as e:\n",
    "    display(e)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 244 entries, 1 to 246\n",
      "Data columns (total 14 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   day          244 non-null    int32  \n",
      " 1   month        244 non-null    int32  \n",
      " 2   year         244 non-null    int32  \n",
      " 3   Temperature  244 non-null    float64\n",
      " 4   RH           244 non-null    float64\n",
      " 5   Ws           244 non-null    float64\n",
      " 6   Rain         244 non-null    float64\n",
      " 7   FFMC         244 non-null    float64\n",
      " 8   DMC          244 non-null    float64\n",
      " 9   DC           244 non-null    float64\n",
      " 10  ISI          244 non-null    float64\n",
      " 11  BUI          244 non-null    object \n",
      " 12  FWI          243 non-null    float64\n",
      " 13  isFire       243 non-null    object \n",
      "dtypes: float64(9), int32(3), object(2)\n",
      "memory usage: 33.8+ KB\n"
     ]
    }
   ],
   "source": [
    "algerian_df['FWI']=algerian_df['FWI'].apply(lambda x: np.nan if 'fire' in x else float(x))\n",
    "algerian_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>isFire</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>14</td>\n",
       "      <td>7</td>\n",
       "      <td>2012</td>\n",
       "      <td>37.0</td>\n",
       "      <td>37.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.2</td>\n",
       "      <td>88.9</td>\n",
       "      <td>12.9</td>\n",
       "      <td>14.69</td>\n",
       "      <td>12.5</td>\n",
       "      <td>10.4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     day  month  year  Temperature    RH    Ws  Rain  FFMC   DMC     DC   ISI  \\\n",
       "168   14      7  2012         37.0  37.0  18.0   0.2  88.9  12.9  14.69  12.5   \n",
       "\n",
       "      BUI  FWI isFire  \n",
       "168  10.4  NaN    NaN  "
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "algerian_df[algerian_df['FWI'].isna()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 244 entries, 1 to 246\n",
      "Data columns (total 14 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   day          244 non-null    int32  \n",
      " 1   month        244 non-null    int32  \n",
      " 2   year         244 non-null    int32  \n",
      " 3   Temperature  244 non-null    float64\n",
      " 4   RH           244 non-null    float64\n",
      " 5   Ws           244 non-null    float64\n",
      " 6   Rain         244 non-null    float64\n",
      " 7   FFMC         244 non-null    float64\n",
      " 8   DMC          244 non-null    float64\n",
      " 9   DC           244 non-null    float64\n",
      " 10  ISI          244 non-null    float64\n",
      " 11  BUI          244 non-null    object \n",
      " 12  FWI          244 non-null    float64\n",
      " 13  isFire       243 non-null    object \n",
      "dtypes: float64(9), int32(3), object(2)\n",
      "memory usage: 33.8+ KB\n"
     ]
    }
   ],
   "source": [
    "algerian_df['FWI'].fillna(algerian_df['FWI'].mean(),inplace=True)\n",
    "algerian_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "day              int32\n",
       "month            int32\n",
       "year             int32\n",
       "Temperature    float64\n",
       "RH             float64\n",
       "Ws             float64\n",
       "Rain           float64\n",
       "FFMC           float64\n",
       "DMC            float64\n",
       "DC             float64\n",
       "ISI            float64\n",
       "BUI            float64\n",
       "FWI            float64\n",
       "isFire          object\n",
       "dtype: object"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "algerian_df['BUI']=algerian_df['BUI'].astype(float)\n",
    "algerian_df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1       not fire   \n",
       "2       not fire   \n",
       "3       not fire   \n",
       "4       not fire   \n",
       "5       not fire   \n",
       "           ...     \n",
       "242         fire   \n",
       "243     not fire   \n",
       "244     not fire   \n",
       "245     not fire   \n",
       "246    not fire    \n",
       "Name: isFire, Length: 244, dtype: object"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "algerian_df['isFire']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "algerian_df['isFire'].fillna('fire',inplace=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "day              int32\n",
       "month            int32\n",
       "year             int32\n",
       "Temperature    float64\n",
       "RH             float64\n",
       "Ws             float64\n",
       "Rain           float64\n",
       "FFMC           float64\n",
       "DMC            float64\n",
       "DC             float64\n",
       "ISI            float64\n",
       "BUI            float64\n",
       "FWI            float64\n",
       "isFire           int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# OneHotEncoding on isFire data\n",
    "algerian_df['isFire']=algerian_df['isFire'].apply(lambda x: int(x.strip()=='fire'))\n",
    "algerian_df.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets add bejaia or Sidibelabbes as one of the features and see if we can get any results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>isFire</th>\n",
       "      <th>isBejaia</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>2012</td>\n",
       "      <td>29.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>65.7</td>\n",
       "      <td>3.4</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>2012</td>\n",
       "      <td>29.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>1.3</td>\n",
       "      <td>64.4</td>\n",
       "      <td>4.1</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>2012</td>\n",
       "      <td>26.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>13.1</td>\n",
       "      <td>47.1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.7</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>2012</td>\n",
       "      <td>25.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>28.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>2012</td>\n",
       "      <td>27.0</td>\n",
       "      <td>77.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>64.8</td>\n",
       "      <td>3.0</td>\n",
       "      <td>14.2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>26</td>\n",
       "      <td>9</td>\n",
       "      <td>2012</td>\n",
       "      <td>30.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>85.4</td>\n",
       "      <td>16.0</td>\n",
       "      <td>44.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>16.9</td>\n",
       "      <td>6.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>27</td>\n",
       "      <td>9</td>\n",
       "      <td>2012</td>\n",
       "      <td>28.0</td>\n",
       "      <td>87.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>4.4</td>\n",
       "      <td>41.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>8.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>28</td>\n",
       "      <td>9</td>\n",
       "      <td>2012</td>\n",
       "      <td>27.0</td>\n",
       "      <td>87.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>45.9</td>\n",
       "      <td>3.5</td>\n",
       "      <td>7.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>29</td>\n",
       "      <td>9</td>\n",
       "      <td>2012</td>\n",
       "      <td>24.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>79.7</td>\n",
       "      <td>4.3</td>\n",
       "      <td>15.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>5.1</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>30</td>\n",
       "      <td>9</td>\n",
       "      <td>2012</td>\n",
       "      <td>24.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.2</td>\n",
       "      <td>67.3</td>\n",
       "      <td>3.8</td>\n",
       "      <td>16.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>4.8</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>244 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     day  month  year  Temperature    RH    Ws  Rain  FFMC   DMC    DC  ISI  \\\n",
       "1      1      6  2012         29.0  57.0  18.0   0.0  65.7   3.4   7.6  1.3   \n",
       "2      2      6  2012         29.0  61.0  13.0   1.3  64.4   4.1   7.6  1.0   \n",
       "3      3      6  2012         26.0  82.0  22.0  13.1  47.1   2.5   7.1  0.3   \n",
       "4      4      6  2012         25.0  89.0  13.0   2.5  28.6   1.3   6.9  0.0   \n",
       "5      5      6  2012         27.0  77.0  16.0   0.0  64.8   3.0  14.2  1.2   \n",
       "..   ...    ...   ...          ...   ...   ...   ...   ...   ...   ...  ...   \n",
       "242   26      9  2012         30.0  65.0  14.0   0.0  85.4  16.0  44.5  4.5   \n",
       "243   27      9  2012         28.0  87.0  15.0   4.4  41.1   6.5   8.0  0.1   \n",
       "244   28      9  2012         27.0  87.0  29.0   0.5  45.9   3.5   7.9  0.4   \n",
       "245   29      9  2012         24.0  54.0  18.0   0.1  79.7   4.3  15.2  1.7   \n",
       "246   30      9  2012         24.0  64.0  15.0   0.2  67.3   3.8  16.5  1.2   \n",
       "\n",
       "      BUI  FWI  isFire  isBejaia  \n",
       "1     3.4  0.5       0       1.0  \n",
       "2     3.9  0.4       0       1.0  \n",
       "3     2.7  0.1       0       1.0  \n",
       "4     1.7  0.0       0       1.0  \n",
       "5     3.9  0.5       0       1.0  \n",
       "..    ...  ...     ...       ...  \n",
       "242  16.9  6.5       1       0.0  \n",
       "243   6.2  0.0       0       0.0  \n",
       "244   3.4  0.2       0       0.0  \n",
       "245   5.1  0.7       0       0.0  \n",
       "246   4.8  0.5       0       0.0  \n",
       "\n",
       "[244 rows x 15 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "algerian_df['isBejaia']=pd.Series(\n",
    "    np.concatenate(\n",
    "        [\n",
    "            np.ones(len(Bejaia_df)),\n",
    "            np.zeros(len(SidiBel_df))\n",
    "            \n",
    "            ]),\n",
    "    \n",
    "    index=algerian_df.index)\n",
    "algerian_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>year</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>isFire</th>\n",
       "      <th>isBejaia</th>\n",
       "      <th>isSidiBel</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>2012</td>\n",
       "      <td>29.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>65.7</td>\n",
       "      <td>3.4</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>2012</td>\n",
       "      <td>29.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>1.3</td>\n",
       "      <td>64.4</td>\n",
       "      <td>4.1</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>2012</td>\n",
       "      <td>26.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>13.1</td>\n",
       "      <td>47.1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.7</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>2012</td>\n",
       "      <td>25.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>28.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>2012</td>\n",
       "      <td>27.0</td>\n",
       "      <td>77.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>64.8</td>\n",
       "      <td>3.0</td>\n",
       "      <td>14.2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>26</td>\n",
       "      <td>9</td>\n",
       "      <td>2012</td>\n",
       "      <td>30.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>85.4</td>\n",
       "      <td>16.0</td>\n",
       "      <td>44.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>16.9</td>\n",
       "      <td>6.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>27</td>\n",
       "      <td>9</td>\n",
       "      <td>2012</td>\n",
       "      <td>28.0</td>\n",
       "      <td>87.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>4.4</td>\n",
       "      <td>41.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>8.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>28</td>\n",
       "      <td>9</td>\n",
       "      <td>2012</td>\n",
       "      <td>27.0</td>\n",
       "      <td>87.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>45.9</td>\n",
       "      <td>3.5</td>\n",
       "      <td>7.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>29</td>\n",
       "      <td>9</td>\n",
       "      <td>2012</td>\n",
       "      <td>24.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>79.7</td>\n",
       "      <td>4.3</td>\n",
       "      <td>15.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>5.1</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>30</td>\n",
       "      <td>9</td>\n",
       "      <td>2012</td>\n",
       "      <td>24.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.2</td>\n",
       "      <td>67.3</td>\n",
       "      <td>3.8</td>\n",
       "      <td>16.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>4.8</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>244 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     day  month  year  Temperature    RH    Ws  Rain  FFMC   DMC    DC  ISI  \\\n",
       "1      1      6  2012         29.0  57.0  18.0   0.0  65.7   3.4   7.6  1.3   \n",
       "2      2      6  2012         29.0  61.0  13.0   1.3  64.4   4.1   7.6  1.0   \n",
       "3      3      6  2012         26.0  82.0  22.0  13.1  47.1   2.5   7.1  0.3   \n",
       "4      4      6  2012         25.0  89.0  13.0   2.5  28.6   1.3   6.9  0.0   \n",
       "5      5      6  2012         27.0  77.0  16.0   0.0  64.8   3.0  14.2  1.2   \n",
       "..   ...    ...   ...          ...   ...   ...   ...   ...   ...   ...  ...   \n",
       "242   26      9  2012         30.0  65.0  14.0   0.0  85.4  16.0  44.5  4.5   \n",
       "243   27      9  2012         28.0  87.0  15.0   4.4  41.1   6.5   8.0  0.1   \n",
       "244   28      9  2012         27.0  87.0  29.0   0.5  45.9   3.5   7.9  0.4   \n",
       "245   29      9  2012         24.0  54.0  18.0   0.1  79.7   4.3  15.2  1.7   \n",
       "246   30      9  2012         24.0  64.0  15.0   0.2  67.3   3.8  16.5  1.2   \n",
       "\n",
       "      BUI  FWI  isFire  isBejaia  isSidiBel  \n",
       "1     3.4  0.5       0       1.0        0.0  \n",
       "2     3.9  0.4       0       1.0        0.0  \n",
       "3     2.7  0.1       0       1.0        0.0  \n",
       "4     1.7  0.0       0       1.0        0.0  \n",
       "5     3.9  0.5       0       1.0        0.0  \n",
       "..    ...  ...     ...       ...        ...  \n",
       "242  16.9  6.5       1       0.0        1.0  \n",
       "243   6.2  0.0       0       0.0        1.0  \n",
       "244   3.4  0.2       0       0.0        1.0  \n",
       "245   5.1  0.7       0       0.0        1.0  \n",
       "246   4.8  0.5       0       0.0        1.0  \n",
       "\n",
       "[244 rows x 16 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "algerian_df['isSidiBel']=pd.Series(\n",
    "    np.concatenate(\n",
    "        [\n",
    "            np.zeros(len(Bejaia_df)),\n",
    "            np.ones(len(SidiBel_df))\n",
    "            \n",
    "            ]),\n",
    "    \n",
    "    index=algerian_df.index)\n",
    "algerian_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Temperature</th>\n",
       "      <th>RH</th>\n",
       "      <th>Ws</th>\n",
       "      <th>Rain</th>\n",
       "      <th>FFMC</th>\n",
       "      <th>DMC</th>\n",
       "      <th>DC</th>\n",
       "      <th>ISI</th>\n",
       "      <th>BUI</th>\n",
       "      <th>FWI</th>\n",
       "      <th>isFire</th>\n",
       "      <th>isBejaia</th>\n",
       "      <th>isSidiBel</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>29.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>65.7</td>\n",
       "      <td>3.4</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>29.0</td>\n",
       "      <td>61.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>1.3</td>\n",
       "      <td>64.4</td>\n",
       "      <td>4.1</td>\n",
       "      <td>7.6</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>26.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>13.1</td>\n",
       "      <td>47.1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>0.3</td>\n",
       "      <td>2.7</td>\n",
       "      <td>0.1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>25.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>28.6</td>\n",
       "      <td>1.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>27.0</td>\n",
       "      <td>77.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>64.8</td>\n",
       "      <td>3.0</td>\n",
       "      <td>14.2</td>\n",
       "      <td>1.2</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>242</th>\n",
       "      <td>30.0</td>\n",
       "      <td>65.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>85.4</td>\n",
       "      <td>16.0</td>\n",
       "      <td>44.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>16.9</td>\n",
       "      <td>6.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>28.0</td>\n",
       "      <td>87.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>4.4</td>\n",
       "      <td>41.1</td>\n",
       "      <td>6.5</td>\n",
       "      <td>8.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>244</th>\n",
       "      <td>27.0</td>\n",
       "      <td>87.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>45.9</td>\n",
       "      <td>3.5</td>\n",
       "      <td>7.9</td>\n",
       "      <td>0.4</td>\n",
       "      <td>3.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>24.0</td>\n",
       "      <td>54.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>79.7</td>\n",
       "      <td>4.3</td>\n",
       "      <td>15.2</td>\n",
       "      <td>1.7</td>\n",
       "      <td>5.1</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>24.0</td>\n",
       "      <td>64.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0.2</td>\n",
       "      <td>67.3</td>\n",
       "      <td>3.8</td>\n",
       "      <td>16.5</td>\n",
       "      <td>1.2</td>\n",
       "      <td>4.8</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>244 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Temperature    RH    Ws  Rain  FFMC   DMC    DC  ISI   BUI  FWI  isFire  \\\n",
       "1           29.0  57.0  18.0   0.0  65.7   3.4   7.6  1.3   3.4  0.5       0   \n",
       "2           29.0  61.0  13.0   1.3  64.4   4.1   7.6  1.0   3.9  0.4       0   \n",
       "3           26.0  82.0  22.0  13.1  47.1   2.5   7.1  0.3   2.7  0.1       0   \n",
       "4           25.0  89.0  13.0   2.5  28.6   1.3   6.9  0.0   1.7  0.0       0   \n",
       "5           27.0  77.0  16.0   0.0  64.8   3.0  14.2  1.2   3.9  0.5       0   \n",
       "..           ...   ...   ...   ...   ...   ...   ...  ...   ...  ...     ...   \n",
       "242         30.0  65.0  14.0   0.0  85.4  16.0  44.5  4.5  16.9  6.5       1   \n",
       "243         28.0  87.0  15.0   4.4  41.1   6.5   8.0  0.1   6.2  0.0       0   \n",
       "244         27.0  87.0  29.0   0.5  45.9   3.5   7.9  0.4   3.4  0.2       0   \n",
       "245         24.0  54.0  18.0   0.1  79.7   4.3  15.2  1.7   5.1  0.7       0   \n",
       "246         24.0  64.0  15.0   0.2  67.3   3.8  16.5  1.2   4.8  0.5       0   \n",
       "\n",
       "     isBejaia  isSidiBel  \n",
       "1         1.0        0.0  \n",
       "2         1.0        0.0  \n",
       "3         1.0        0.0  \n",
       "4         1.0        0.0  \n",
       "5         1.0        0.0  \n",
       "..        ...        ...  \n",
       "242       0.0        1.0  \n",
       "243       0.0        1.0  \n",
       "244       0.0        1.0  \n",
       "245       0.0        1.0  \n",
       "246       0.0        1.0  \n",
       "\n",
       "[244 rows x 13 columns]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# First lets drop time series datas as they are unequivocally irrelevant\n",
    "features_raw=algerian_df.drop(['day','month','year'],axis=1)\n",
    "features_raw"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data distribution analysis\n",
    "Lets see what each feature looks like"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "13"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "features_raw.columns.__len__()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dvain\\AppData\\Local\\Temp\\ipykernel_21748\\53040832.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(algerian_df[col])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dvain\\AppData\\Local\\Temp\\ipykernel_21748\\53040832.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(algerian_df[col])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dvain\\AppData\\Local\\Temp\\ipykernel_21748\\53040832.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(algerian_df[col])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dvain\\AppData\\Local\\Temp\\ipykernel_21748\\53040832.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(algerian_df[col])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dvain\\AppData\\Local\\Temp\\ipykernel_21748\\53040832.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(algerian_df[col])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dvain\\AppData\\Local\\Temp\\ipykernel_21748\\53040832.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(algerian_df[col])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dvain\\AppData\\Local\\Temp\\ipykernel_21748\\53040832.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(algerian_df[col])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dvain\\AppData\\Local\\Temp\\ipykernel_21748\\53040832.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(algerian_df[col])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dvain\\AppData\\Local\\Temp\\ipykernel_21748\\53040832.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(algerian_df[col])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dvain\\AppData\\Local\\Temp\\ipykernel_21748\\53040832.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(algerian_df[col])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dvain\\AppData\\Local\\Temp\\ipykernel_21748\\53040832.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(algerian_df[col])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dvain\\AppData\\Local\\Temp\\ipykernel_21748\\53040832.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(algerian_df[col])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dvain\\AppData\\Local\\Temp\\ipykernel_21748\\53040832.py:2: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sns.distplot(algerian_df[col])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for col in features_raw.columns:\n",
    "    sns.distplot(algerian_df[col])\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So there are outliers:\n",
    "- Rain (Need more indepth analysis)\n",
    "- FFMC (yeojohnson)\n",
    "- DMC  (log)\n",
    "- F"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(features_raw)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxenplot(features_raw)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "features_raw['DC'].plot.box()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "features_raw['Rain'].plot.box()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.stats import boxcox,yeojohnson\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 3500x1500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "DC_boxcox=yeojohnson(features_raw['DC'])[0]\n",
    "fig,ax=plt.subplots(1,2,figsize=(35,15))\n",
    "\n",
    "sns.boxplot(x=features_raw['DC'],ax=ax[0])\n",
    "sns.boxplot(x=DC_boxcox,ax=ax[1])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: ylabel='Count'>"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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+isCAAAAAMBvuro3DgAAd6KnAIDpMtP1AAAAAAAAAAAAAAAwyQS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABDY2PUA3FuDweBPX3Q3x6QaDAa1vLxcVVWzs7PV6/U6nggAAAAAgDtxbxwAAADg3tPX3cwn5E6569ev//FF/1/dDTKhlpeX68CBA3XgwIGVf3EAAAAAADDe3BsHAAAAuPf0dTcT5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAA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AAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABDZ2PQD31qZNm/74YsZ2r9Xs7GydOXNm5c8AAAAAAIw/98YBAAAA7j193c3chZpyvV7vT190N8ek6vV6NTc31/UYAAAAAACsgXvjAAAAAPeevu5mM10PAAAAAAAAAAAAAACTTJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAAAAAAEBDkAgAAAAAAAAAAAEBAkAsAAAAAAAAAAAAAAUEuAAAAAAAAAAAAAAQEuQAAAAAAAAAAAAAQEOQCAAAAAAAAAAAAQECQCwAAAAAAAAAAAAABQS4AAAAAAAAAAAAABAS5AAAAAAAAAAAAABAQ5AIAAAAAAAAAAABAQJALAAAAAAAAAAAAAAFBLgAAAAAAAAAAAAAEBLkAAAAAAAAA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AAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoIAgFwAAAAAAAAAAAAAKCHIBAAAAAAAAAAAAoEBdtQfoCtrb25MkGzdurPIkAAAAANA1vXnv7M17acDBz71xAAAAANi1vbk3LshN8uqrryZJ+vbtW+VJAAAAAKBre/XVV9OrV69qjwHsB+6NAwAAAMCe2ZN74zXtHmmRtra2rF69Oj179kxNTU21x9nvNm7cmL59++aFF15IfX19tceBJM5Lui7nJl2Vc5OuyrlJV+XcpCtyXtJV7em52d7enldffTXNzc2pra2t4ITAgeLeOHA4sSYAb2VdALZnTQC2Z01ge3tzb9wTcpPU1tbm3e9+d7XHOODq6+stEHQ5zku6KucmXZVzk67KuUlX5dykK3Je0lXtybnpybhwaHFvHDgcWROAt7IuANuzJgDbsybwpj29N+5RFgAAAAAAAAAAAABQQJALAAAAAAAAAAAAAAUEuYeBbt265aabbkq3bt2qPQp0cF7SVTk36aqcm3RVzk26KucmXZHzkq7KuQkcqqxvwPasCcBbWReA7VkTgO1ZE9hXNe3t7e3VHgIAAAAAAAAAAAAADlaekAsAAAAAAAAAAAAABQS5AAAAAAAAAAAAAFBAkAsAAAAAAAAAAAAABQS5AAAAAAAAAAAAAFBAkHuImD59ek488cR07949gwYNyq9//etd7v/DH/4wp59+erp3754zzzwzP/3pTys0KYeLqVOn5gMf+EB69uyZ3r17Z9SoUVm+fPkuPzNr1qzU1NR0enXv3r1CE3M4uPnmm992jp1++um7/Iz1kko48cQT33Zu1tTU5Jprrtnh/tZLDpRFixZl5MiRaW5uTk1NTebMmdNpe3t7e2688caccMIJOfroozN06NA8++yzuz3u3l6rwlvt6txsbW3NlClTcuaZZ6ZHjx5pbm7OZZddltWrV+/ymPtyXQBvtbt18/LLL3/beTZ8+PDdHte6SYndnZc7uu6sqanJV77ylZ0e05oJdGXujQPb25s14emnn87o0aM77s3dcccdlRsUqJi9WRe++c1v5sMf/nCOPfbYHHvssRk6dKg/k8MhZm/WhAcffDADBw5MQ0NDevTokQEDBuQ73/lOBacFDrR9vRf/wAMPpKamJqNGjTqwA3JQEuQeAr7//e9n8uTJuemmm7J06dL0798/w4YNy9q1a3e4/2OPPZaxY8fmqquuym9+85uMGjUqo0aNylNPPVXhyTmU/fznP88111yTX/3qV5k/f35aW1vzsY99LJs3b97l5+rr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CghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAAAAAAAKCAIBcAAAAAAAAAAAAACghyAQAAAAAA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4YU577zz8o1vfONAjQwAAAAAAAAAAAAAnVT1CblDhgxJe3v7Hu//+9///m3vNTY2Zvbs2ftxKgAAAAAAAAAAAADYc1V9Qi4AAAAAAAAAAAAAHOwEuQAAAAAAAAAAAABQQJALAAAAAAAAAAAAAAUEuQAAAAAAAAAAAABQQJALAAAAAAAAAAAAAAUEuQAAAAAAAAAAAABQQJALAAAAAAAAAAAAAAUEuQAAAAAAAAAAAABQQJALAAAAAAAAAAAAAAUEuQAAAAAAAAAAAABQQJALAAAAAAAVtmjRoowcOTLNzc2pqanJnDlzOra1trZmypQpOfPMM9OjR480Nzfnsssuy+rVqzsdY926dRk3blzq6+vT0NCQq666Kps2barwNwEAAAAAEkEuAAAAAABU3ObNm9O/f/9Mnz79bdtee+21LF26NDfccEOWLl2aBx98MMuXL8/FF1/cab9x48bl6aefzvz58zN37twsWrQoEyZMqNRXAAAAAAC2U1ftAQAAAAAA4HAzYsSIjBgxYofbevXqlfnz53d67+677865556bVatWpV+/fnnmmWcyb968PP744xk4cGCS5K677sqFF16YadOmpbm5+YB/BwAAAADg//GEXAAAAAAA6OI2bNiQmpqaNDQ0JEkWL16choaGjhg3SYYOHZra2tosWbJkh8fYsmVLNm7c2OkFAAAAAOwfglwAAAAAAOjCXn/99UyZMiVjx45NfX19kqSlpSW9e/futF9dXV0aGxvT0tKyw+NMnTo1vXr16nj17dv3gM8OAAAAAIcLQS4AAAAAAHRRra2t+eQnP5n29vbMmDGj6FjXX399NmzY0PF64YUX9tOUAAAAAEBdtQcAAAAAAADe7s0Yd+XKlVm4cGHH03GTpKmpKWvXru20/9atW7Nu3bo0NTXt8HjdunVLt27dDujMAAAAAHC48oRcAAAAAADoYt6McZ999tk8/PDDOe644zptHzx4cNavX58nn3yy472FCxemra0tgwYNqvS4AAAAAHDY84RcAAAAAACosE2bNuW5557r+HnFihVZtmxZGhsbc8IJJ+SSSy7J0qVLM3fu3Gzbti0tLS1JksbGxhx11FE544wzMnz48Fx99dWZOXNmWltbM3HixIwZMybNzc3V+loAAAAAcNgS5AIAAAAAQIU98cQTOf/88zt+njx5cpJk/Pjxufnmm/Pj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/ve/P7W1tb3O33TTTX0y7oYbbshtt92Wu+++O8cee2yefPLJfOpTn0p9fX0uv/zyJMmNN96YJUuW5O67705zc3Pmz5+fKVOm5Omnn87w4cP7ZAcAAAAAAPTXs3EAAAAAYPDZryD3l7/8ZU444YQkyfr163udq6qqKh71vx599NFMnTo15513XpLkyCOPzLe+9a08/vjjSf7n7biLFy/O1VdfnalTpyZJ7rnnnjQ0NGTlypWZMWNGn20BAAAAAGBo669n4wAAAADA4LNfQe6///u/9/WOvTr99NNz++2359lnn8173/ve/OIXv8jPfvaznrcMPP/882ltbU1LS0vPd+rr63PqqadmzZo1+wxyOzo60tHR0fNze3v7gf1FAAAAAAAY9Prr2TgAAAAAMPjsV5DbX6666qq0t7dn4sSJGTZsWHbv3p3rrrsuM2fOTJK0trYmSRoaGnp9r6Ghoefc3ixatCgLFiw4cMMBAAAAAAAAAAAAGDL2K8j98Ic//Ib/91sPPfTQfg/6v7797W/n3nvvzYoVK3Lsscfm5z//eebMmZNx48bloosu2u/7zps3L3Pnzu35ub29PePHj++LyQAAAAAAvEP117NxAAAAAGDw2a8g94QTTuj1c2dnZ37+859n/fr1RaHsn/vCF76Qq666KjNmzEiSHH/88XnhhReyaNGiXHTRRWlsbEyStLW1pampqed7bW1tf7Hx/6qrq0tdXV2f7QQAAAAA4J2vv56NAwAAAACDz34FuTfffPNej//rv/5rXn311aJB/9drr72W6urqXseGDRuWPXv2JEmam5vT2NiY1atX9zwIbW9vz9q1a3PppZf22Q4AAAAAAOivZ+MAAAAAwOBT/eaXvHUXXnhhvvnNb/bZ/T72sY/luuuuy/e///387ne/ywMPPJCbbropf/d3f5ckqaqqypw5c3LttdfmwQcfzK9+9av84z/+Y8aNG5dp06b12Q4AAAAAANiXvn42DgAAAAAMPvv1htx9WbNmTYYPH95n97vlllsyf/78fO5zn8uWLVsybty4fPazn80111zTc82VV16ZHTt25JJLLsm2bdty5plnZtWqVX26AwAAAAAA9qWvn40DAAAAAIPPfgW5F1xwQa+fu7u78/LLL+fJJ5/M/Pnz+2RYkowcOTKLFy/O4sWL93lNVVVVFi5cmIULF/bZnwsAAAAA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ACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAAAAAAACAAoJcAAAAAAAAAAAAACggyAUAAAAAgAFm0aJFOeWUUzJy5MiMHTs206ZNy8aNG3tds2vXrsyaNStjxozJIYcckunTp6etra1CiwEAAABgaBPkAgAAAADAAPPwww9n1qxZeeyxx/LjH/84nZ2dOeecc7Jjx46ea6644op897vfzf3335+HH344L730Ui644IIKrgYAAACAoaum0gMA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",
      "text/plain": [
       "<Figure size 3500x2500 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Rain_boxcox=yeojohnson(features_raw['Rain'])[0]\n",
    "fig,ax=plt.subplots(2,2,figsize=(35,25))\n",
    "\n",
    "sns.boxplot(x=features_raw['Rain'],ax=ax[0,0])\n",
    "sns.boxplot(x=Rain_boxcox,ax=ax[0,1])\n",
    "sns.histplot(data=features_raw['Rain'],ax=ax[1,0])\n",
    "sns.histplot(data=Rain_boxcox,ax=ax[1,1])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "DC_boxcox=yeojohnson(features_raw['DC'])[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Scaling\n",
    "- standardScalar(Most preferred)(std=1 , mean=0)\n",
    "- Minmax Scalar (range[-1,1])\n",
    "- Robust Sclar (outlier robust)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Rain_boxcox=np.log(features_raw['DC'])[0]\n",
    "fig,ax=plt.subplots(2,2,figsize=(35,25))\n",
    "\n",
    "sns.boxplot(x=features_raw['DC'],ax=ax[0,0])\n",
    "sns.boxplot(x=Rain_boxcox,ax=ax[0,1])\n",
    "sns.histplot(data=features_raw['DC'],ax=ax[1,0])\n",
    "sns.histplot(data=Rain_boxcox,ax=ax[1,1])\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
